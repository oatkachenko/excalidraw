{
  "version": 3,
  "sources": ["<define:import.meta.env>", "../../../../node_modules/es6-promise-pool/es6-promise-pool.js", "../../../../node_modules/@braintree/sanitize-url/dist/index.js", "../../src/index.ts", "../../src/binary-heap.ts", "../../src/colors.ts", "../../../../node_modules/open-color/open-color.json", "../../src/constants.ts", "../../src/font-metadata.ts", "../../src/queue.ts", "../../src/keys.ts", "../../src/points.ts", "../../../math/src/index.ts", "../../../math/src/angle.ts", "../../../math/src/utils.ts", "../../../math/src/curve.ts", "../../../math/src/point.ts", "../../../math/src/vector.ts", "../../../math/src/rectangle.ts", "../../../math/src/segment.ts", "../../../math/src/line.ts", "../../../math/src/polygon.ts", "../../../math/src/range.ts", "../../../math/src/triangle.ts", "../../../math/src/types.ts", "../../src/promise-pool.ts", "../../src/random.ts", "../../../../node_modules/nanoid/index.browser.js", "../../../../node_modules/nanoid/url-alphabet/index.js", "../../../../node_modules/roughjs/bin/math.js", "../../src/utils.ts", "../../src/url.ts"],
  "sourcesContent": ["", "(function (root, factory) {\n  /* istanbul ignore next */\n  if (typeof define === 'function' && define.amd) {\n    define([], factory)\n  } else if (typeof exports === 'object') {\n    module.exports = factory()\n  } else {\n    root.PromisePool = factory()\n    // Legacy API\n    root.promisePool = root.PromisePool\n  }\n})(this, function () {\n  'use strict'\n\n  var EventTarget = function () {\n    this._listeners = {}\n  }\n\n  EventTarget.prototype.addEventListener = function (type, listener) {\n    this._listeners[type] = this._listeners[type] || []\n    if (this._listeners[type].indexOf(listener) < 0) {\n      this._listeners[type].push(listener)\n    }\n  }\n\n  EventTarget.prototype.removeEventListener = function (type, listener) {\n    if (this._listeners[type]) {\n      var p = this._listeners[type].indexOf(listener)\n      if (p >= 0) {\n        this._listeners[type].splice(p, 1)\n      }\n    }\n  }\n\n  EventTarget.prototype.dispatchEvent = function (evt) {\n    if (this._listeners[evt.type] && this._listeners[evt.type].length) {\n      var listeners = this._listeners[evt.type].slice()\n      for (var i = 0, l = listeners.length; i < l; ++i) {\n        listeners[i].call(this, evt)\n      }\n    }\n  }\n\n  var isGenerator = function (func) {\n    return (typeof func.constructor === 'function' &&\n      func.constructor.name === 'GeneratorFunction')\n  }\n\n  var functionToIterator = function (func) {\n    return {\n      next: function () {\n        var promise = func()\n        return promise ? {value: promise} : {done: true}\n      }\n    }\n  }\n\n  var promiseToIterator = function (promise) {\n    var called = false\n    return {\n      next: function () {\n        if (called) {\n          return {done: true}\n        }\n        called = true\n        return {value: promise}\n      }\n    }\n  }\n\n  var toIterator = function (obj, Promise) {\n    var type = typeof obj\n    if (type === 'object') {\n      if (typeof obj.next === 'function') {\n        return obj\n      }\n      /* istanbul ignore else */\n      if (typeof obj.then === 'function') {\n        return promiseToIterator(obj)\n      }\n    }\n    if (type === 'function') {\n      return isGenerator(obj) ? obj() : functionToIterator(obj)\n    }\n    return promiseToIterator(Promise.resolve(obj))\n  }\n\n  var PromisePoolEvent = function (target, type, data) {\n    this.target = target\n    this.type = type\n    this.data = data\n  }\n\n  var PromisePool = function (source, concurrency, options) {\n    EventTarget.call(this)\n    if (typeof concurrency !== 'number' ||\n        Math.floor(concurrency) !== concurrency ||\n        concurrency < 1) {\n      throw new Error('Invalid concurrency')\n    }\n    this._concurrency = concurrency\n    this._options = options || {}\n    this._options.promise = this._options.promise || Promise\n    this._iterator = toIterator(source, this._options.promise)\n    this._done = false\n    this._size = 0\n    this._promise = null\n    this._callbacks = null\n  }\n  PromisePool.prototype = new EventTarget()\n  PromisePool.prototype.constructor = PromisePool\n\n  PromisePool.prototype.concurrency = function (value) {\n    if (typeof value !== 'undefined') {\n      this._concurrency = value\n      if (this.active()) {\n        this._proceed()\n      }\n    }\n    return this._concurrency\n  }\n\n  PromisePool.prototype.size = function () {\n    return this._size\n  }\n\n  PromisePool.prototype.active = function () {\n    return !!this._promise\n  }\n\n  PromisePool.prototype.promise = function () {\n    return this._promise\n  }\n\n  PromisePool.prototype.start = function () {\n    var that = this\n    var Promise = this._options.promise\n    this._promise = new Promise(function (resolve, reject) {\n      that._callbacks = {\n        reject: reject,\n        resolve: resolve\n      }\n      that._proceed()\n    })\n    return this._promise\n  }\n\n  PromisePool.prototype._fireEvent = function (type, data) {\n    this.dispatchEvent(new PromisePoolEvent(this, type, data))\n  }\n\n  PromisePool.prototype._settle = function (error) {\n    if (error) {\n      this._callbacks.reject(error)\n    } else {\n      this._callbacks.resolve()\n    }\n    this._promise = null\n    this._callbacks = null\n  }\n\n  PromisePool.prototype._onPooledPromiseFulfilled = function (promise, result) {\n    this._size--\n    if (this.active()) {\n      this._fireEvent('fulfilled', {\n        promise: promise,\n        result: result\n      })\n      this._proceed()\n    }\n  }\n\n  PromisePool.prototype._onPooledPromiseRejected = function (promise, error) {\n    this._size--\n    if (this.active()) {\n      this._fireEvent('rejected', {\n        promise: promise,\n        error: error\n      })\n      this._settle(error || new Error('Unknown error'))\n    }\n  }\n\n  PromisePool.prototype._trackPromise = function (promise) {\n    var that = this\n    promise\n      .then(function (result) {\n        that._onPooledPromiseFulfilled(promise, result)\n      }, function (error) {\n        that._onPooledPromiseRejected(promise, error)\n      })['catch'](function (err) {\n        that._settle(new Error('Promise processing failed: ' + err))\n      })\n  }\n\n  PromisePool.prototype._proceed = function () {\n    if (!this._done) {\n      var result = { done: false }\n      while (this._size < this._concurrency &&\n          !(result = this._iterator.next()).done) {\n        this._size++\n        this._trackPromise(result.value)\n      }\n      this._done = (result === null || !!result.done)\n    }\n    if (this._done && this._size === 0) {\n      this._settle()\n    }\n  }\n\n  PromisePool.PromisePoolEvent = PromisePoolEvent\n  // Legacy API\n  PromisePool.PromisePool = PromisePool\n\n  return PromisePool\n})\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sanitizeUrl = void 0;\nvar invalidProtocolRegex = /^([^\\w]*)(javascript|data|vbscript)/im;\nvar htmlEntitiesRegex = /&#(\\w+)(^\\w|;)?/g;\nvar htmlCtrlEntityRegex = /&(newline|tab);/gi;\nvar ctrlCharactersRegex = /[\\u0000-\\u001F\\u007F-\\u009F\\u2000-\\u200D\\uFEFF]/gim;\nvar urlSchemeRegex = /^.+(:|&colon;)/gim;\nvar relativeFirstCharacters = [\".\", \"/\"];\nfunction isRelativeUrlWithoutProtocol(url) {\n    return relativeFirstCharacters.indexOf(url[0]) > -1;\n}\n// adapted from https://stackoverflow.com/a/29824550/2601552\nfunction decodeHtmlCharacters(str) {\n    return str.replace(htmlEntitiesRegex, function (match, dec) {\n        return String.fromCharCode(dec);\n    });\n}\nfunction sanitizeUrl(url) {\n    var sanitizedUrl = decodeHtmlCharacters(url || \"\")\n        .replace(htmlCtrlEntityRegex, \"\")\n        .replace(ctrlCharactersRegex, \"\")\n        .trim();\n    if (!sanitizedUrl) {\n        return \"about:blank\";\n    }\n    if (isRelativeUrlWithoutProtocol(sanitizedUrl)) {\n        return sanitizedUrl;\n    }\n    var urlSchemeParseResults = sanitizedUrl.match(urlSchemeRegex);\n    if (!urlSchemeParseResults) {\n        return sanitizedUrl;\n    }\n    var urlScheme = urlSchemeParseResults[0];\n    if (invalidProtocolRegex.test(urlScheme)) {\n        return \"about:blank\";\n    }\n    return sanitizedUrl;\n}\nexports.sanitizeUrl = sanitizeUrl;\n", "export * from \"./binary-heap\";\nexport * from \"./colors\";\nexport * from \"./constants\";\nexport * from \"./font-metadata\";\nexport * from \"./queue\";\nexport * from \"./keys\";\nexport * from \"./points\";\nexport * from \"./promise-pool\";\nexport * from \"./random\";\nexport * from \"./url\";\nexport * from \"./utils\";\n", "export class BinaryHeap<T> {\n  private content: T[] = [];\n\n  constructor(private scoreFunction: (node: T) => number) {}\n\n  sinkDown(idx: number) {\n    const node = this.content[idx];\n    while (idx > 0) {\n      const parentN = ((idx + 1) >> 1) - 1;\n      const parent = this.content[parentN];\n      if (this.scoreFunction(node) < this.scoreFunction(parent)) {\n        this.content[parentN] = node;\n        this.content[idx] = parent;\n        idx = parentN; // TODO: Optimize\n      } else {\n        break;\n      }\n    }\n  }\n\n  bubbleUp(idx: number) {\n    const length = this.content.length;\n    const node = this.content[idx];\n    const score = this.scoreFunction(node);\n\n    while (true) {\n      const child2N = (idx + 1) << 1;\n      const child1N = child2N - 1;\n      let swap = null;\n      let child1Score = 0;\n\n      if (child1N < length) {\n        const child1 = this.content[child1N];\n        child1Score = this.scoreFunction(child1);\n        if (child1Score < score) {\n          swap = child1N;\n        }\n      }\n\n      if (child2N < length) {\n        const child2 = this.content[child2N];\n        const child2Score = this.scoreFunction(child2);\n        if (child2Score < (swap === null ? score : child1Score)) {\n          swap = child2N;\n        }\n      }\n\n      if (swap !== null) {\n        this.content[idx] = this.content[swap];\n        this.content[swap] = node;\n        idx = swap; // TODO: Optimize\n      } else {\n        break;\n      }\n    }\n  }\n\n  push(node: T) {\n    this.content.push(node);\n    this.sinkDown(this.content.length - 1);\n  }\n\n  pop(): T | null {\n    if (this.content.length === 0) {\n      return null;\n    }\n\n    const result = this.content[0];\n    const end = this.content.pop()!;\n\n    if (this.content.length > 0) {\n      this.content[0] = end;\n      this.bubbleUp(0);\n    }\n\n    return result;\n  }\n\n  remove(node: T) {\n    if (this.content.length === 0) {\n      return;\n    }\n\n    const i = this.content.indexOf(node);\n    const end = this.content.pop()!;\n\n    if (i < this.content.length) {\n      this.content[i] = end;\n\n      if (this.scoreFunction(end) < this.scoreFunction(node)) {\n        this.sinkDown(i);\n      } else {\n        this.bubbleUp(i);\n      }\n    }\n  }\n\n  size(): number {\n    return this.content.length;\n  }\n\n  rescoreElement(node: T) {\n    this.sinkDown(this.content.indexOf(node));\n  }\n}\n", "import oc from \"open-color\";\n\nimport type { Merge } from \"./utility-types\";\n\n// FIXME can't put to utils.ts rn because of circular dependency\nconst pick = <R extends Record<string, any>, K extends readonly (keyof R)[]>(\n  source: R,\n  keys: K,\n) => {\n  return keys.reduce((acc, key: K[number]) => {\n    if (key in source) {\n      acc[key] = source[key];\n    }\n    return acc;\n  }, {} as Pick<R, K[number]>) as Pick<R, K[number]>;\n};\n\nexport type ColorPickerColor =\n  | Exclude<keyof oc, \"indigo\" | \"lime\">\n  | \"transparent\"\n  | \"bronze\";\nexport type ColorTuple = readonly [string, string, string, string, string];\nexport type ColorPalette = Merge<\n  Record<ColorPickerColor, ColorTuple>,\n  { black: \"#1e1e1e\"; white: \"#ffffff\"; transparent: \"transparent\" }\n>;\n\n// used general type instead of specific type (ColorPalette) to support custom colors\nexport type ColorPaletteCustom = { [key: string]: ColorTuple | string };\nexport type ColorShadesIndexes = [number, number, number, number, number];\n\nexport const MAX_CUSTOM_COLORS_USED_IN_CANVAS = 5;\nexport const COLORS_PER_ROW = 5;\n\nexport const DEFAULT_CHART_COLOR_INDEX = 4;\n\nexport const DEFAULT_ELEMENT_STROKE_COLOR_INDEX = 4;\nexport const DEFAULT_ELEMENT_BACKGROUND_COLOR_INDEX = 1;\nexport const ELEMENTS_PALETTE_SHADE_INDEXES = [0, 2, 4, 6, 8] as const;\nexport const CANVAS_PALETTE_SHADE_INDEXES = [0, 1, 2, 3, 4] as const;\n\nexport const getSpecificColorShades = (\n  color: Exclude<\n    ColorPickerColor,\n    \"transparent\" | \"white\" | \"black\" | \"bronze\"\n  >,\n  indexArr: Readonly<ColorShadesIndexes>,\n) => {\n  return indexArr.map((index) => oc[color][index]) as any as ColorTuple;\n};\n\nexport const COLOR_PALETTE = {\n  transparent: \"transparent\",\n  black: \"#1e1e1e\",\n  white: \"#ffffff\",\n  // open-colors\n  gray: getSpecificColorShades(\"gray\", ELEMENTS_PALETTE_SHADE_INDEXES),\n  red: getSpecificColorShades(\"red\", ELEMENTS_PALETTE_SHADE_INDEXES),\n  pink: getSpecificColorShades(\"pink\", ELEMENTS_PALETTE_SHADE_INDEXES),\n  grape: getSpecificColorShades(\"grape\", ELEMENTS_PALETTE_SHADE_INDEXES),\n  violet: getSpecificColorShades(\"violet\", ELEMENTS_PALETTE_SHADE_INDEXES),\n  blue: getSpecificColorShades(\"blue\", ELEMENTS_PALETTE_SHADE_INDEXES),\n  cyan: getSpecificColorShades(\"cyan\", ELEMENTS_PALETTE_SHADE_INDEXES),\n  teal: getSpecificColorShades(\"teal\", ELEMENTS_PALETTE_SHADE_INDEXES),\n  green: getSpecificColorShades(\"green\", ELEMENTS_PALETTE_SHADE_INDEXES),\n  yellow: getSpecificColorShades(\"yellow\", ELEMENTS_PALETTE_SHADE_INDEXES),\n  orange: getSpecificColorShades(\"orange\", ELEMENTS_PALETTE_SHADE_INDEXES),\n  // radix bronze shades 3,5,7,9,11\n  bronze: [\"#f8f1ee\", \"#eaddd7\", \"#d2bab0\", \"#a18072\", \"#846358\"],\n} as ColorPalette;\n\nconst COMMON_ELEMENT_SHADES = pick(COLOR_PALETTE, [\n  \"cyan\",\n  \"blue\",\n  \"violet\",\n  \"grape\",\n  \"pink\",\n  \"green\",\n  \"teal\",\n  \"yellow\",\n  \"orange\",\n  \"red\",\n]);\n\n// -----------------------------------------------------------------------------\n// quick picks defaults\n// -----------------------------------------------------------------------------\n\n// ORDER matters for positioning in quick picker\nexport const DEFAULT_ELEMENT_STROKE_PICKS = [\n  COLOR_PALETTE.black,\n  COLOR_PALETTE.red[DEFAULT_ELEMENT_STROKE_COLOR_INDEX],\n  COLOR_PALETTE.green[DEFAULT_ELEMENT_STROKE_COLOR_INDEX],\n  COLOR_PALETTE.blue[DEFAULT_ELEMENT_STROKE_COLOR_INDEX],\n  COLOR_PALETTE.yellow[DEFAULT_ELEMENT_STROKE_COLOR_INDEX],\n] as ColorTuple;\n\n// ORDER matters for positioning in quick picker\nexport const DEFAULT_ELEMENT_BACKGROUND_PICKS = [\n  COLOR_PALETTE.transparent,\n  COLOR_PALETTE.red[DEFAULT_ELEMENT_BACKGROUND_COLOR_INDEX],\n  COLOR_PALETTE.green[DEFAULT_ELEMENT_BACKGROUND_COLOR_INDEX],\n  COLOR_PALETTE.blue[DEFAULT_ELEMENT_BACKGROUND_COLOR_INDEX],\n  COLOR_PALETTE.yellow[DEFAULT_ELEMENT_BACKGROUND_COLOR_INDEX],\n] as ColorTuple;\n\n// ORDER matters for positioning in quick picker\nexport const DEFAULT_CANVAS_BACKGROUND_PICKS = [\n  COLOR_PALETTE.white,\n  // radix slate2\n  \"#f8f9fa\",\n  // radix blue2\n  \"#f5faff\",\n  // radix yellow2\n  \"#fffce8\",\n  // radix bronze2\n  \"#fdf8f6\",\n] as ColorTuple;\n\n// -----------------------------------------------------------------------------\n// palette defaults\n// -----------------------------------------------------------------------------\n\nexport const DEFAULT_ELEMENT_STROKE_COLOR_PALETTE = {\n  // 1st row\n  transparent: COLOR_PALETTE.transparent,\n  white: COLOR_PALETTE.white,\n  gray: COLOR_PALETTE.gray,\n  black: COLOR_PALETTE.black,\n  bronze: COLOR_PALETTE.bronze,\n  // rest\n  ...COMMON_ELEMENT_SHADES,\n} as const;\n\n// ORDER matters for positioning in pallete (5x3 grid)s\nexport const DEFAULT_ELEMENT_BACKGROUND_COLOR_PALETTE = {\n  transparent: COLOR_PALETTE.transparent,\n  white: COLOR_PALETTE.white,\n  gray: COLOR_PALETTE.gray,\n  black: COLOR_PALETTE.black,\n  bronze: COLOR_PALETTE.bronze,\n\n  ...COMMON_ELEMENT_SHADES,\n} as const;\n\n// -----------------------------------------------------------------------------\n// helpers\n// -----------------------------------------------------------------------------\n\n// !!!MUST BE WITHOUT GRAY, TRANSPARENT AND BLACK!!!\nexport const getAllColorsSpecificShade = (index: 0 | 1 | 2 | 3 | 4) =>\n  [\n    // 2nd row\n    COLOR_PALETTE.cyan[index],\n    COLOR_PALETTE.blue[index],\n    COLOR_PALETTE.violet[index],\n    COLOR_PALETTE.grape[index],\n    COLOR_PALETTE.pink[index],\n\n    // 3rd row\n    COLOR_PALETTE.green[index],\n    COLOR_PALETTE.teal[index],\n    COLOR_PALETTE.yellow[index],\n    COLOR_PALETTE.orange[index],\n    COLOR_PALETTE.red[index],\n  ] as const;\n\nexport const rgbToHex = (r: number, g: number, b: number) =>\n  `#${((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)}`;\n\n// -----------------------------------------------------------------------------\n", "{\n  \"white\": \"#ffffff\",\n  \"black\": \"#000000\",\n  \"gray\": [\n    \"#f8f9fa\",\n    \"#f1f3f5\",\n    \"#e9ecef\",\n    \"#dee2e6\",\n    \"#ced4da\",\n    \"#adb5bd\",\n    \"#868e96\",\n    \"#495057\",\n    \"#343a40\",\n    \"#212529\"\n  ],\n  \"red\": [\n    \"#fff5f5\",\n    \"#ffe3e3\",\n    \"#ffc9c9\",\n    \"#ffa8a8\",\n    \"#ff8787\",\n    \"#ff6b6b\",\n    \"#fa5252\",\n    \"#f03e3e\",\n    \"#e03131\",\n    \"#c92a2a\"\n  ],\n  \"pink\": [\n    \"#fff0f6\",\n    \"#ffdeeb\",\n    \"#fcc2d7\",\n    \"#faa2c1\",\n    \"#f783ac\",\n    \"#f06595\",\n    \"#e64980\",\n    \"#d6336c\",\n    \"#c2255c\",\n    \"#a61e4d\"\n  ],\n  \"grape\": [\n    \"#f8f0fc\",\n    \"#f3d9fa\",\n    \"#eebefa\",\n    \"#e599f7\",\n    \"#da77f2\",\n    \"#cc5de8\",\n    \"#be4bdb\",\n    \"#ae3ec9\",\n    \"#9c36b5\",\n    \"#862e9c\"\n  ],\n  \"violet\": [\n    \"#f3f0ff\",\n    \"#e5dbff\",\n    \"#d0bfff\",\n    \"#b197fc\",\n    \"#9775fa\",\n    \"#845ef7\",\n    \"#7950f2\",\n    \"#7048e8\",\n    \"#6741d9\",\n    \"#5f3dc4\"\n  ],\n  \"indigo\": [\n    \"#edf2ff\",\n    \"#dbe4ff\",\n    \"#bac8ff\",\n    \"#91a7ff\",\n    \"#748ffc\",\n    \"#5c7cfa\",\n    \"#4c6ef5\",\n    \"#4263eb\",\n    \"#3b5bdb\",\n    \"#364fc7\"\n  ],\n  \"blue\": [\n    \"#e7f5ff\",\n    \"#d0ebff\",\n    \"#a5d8ff\",\n    \"#74c0fc\",\n    \"#4dabf7\",\n    \"#339af0\",\n    \"#228be6\",\n    \"#1c7ed6\",\n    \"#1971c2\",\n    \"#1864ab\"\n  ],\n  \"cyan\": [\n    \"#e3fafc\",\n    \"#c5f6fa\",\n    \"#99e9f2\",\n    \"#66d9e8\",\n    \"#3bc9db\",\n    \"#22b8cf\",\n    \"#15aabf\",\n    \"#1098ad\",\n    \"#0c8599\",\n    \"#0b7285\"\n  ],\n  \"teal\": [\n    \"#e6fcf5\",\n    \"#c3fae8\",\n    \"#96f2d7\",\n    \"#63e6be\",\n    \"#38d9a9\",\n    \"#20c997\",\n    \"#12b886\",\n    \"#0ca678\",\n    \"#099268\",\n    \"#087f5b\"\n  ],\n  \"green\": [\n    \"#ebfbee\",\n    \"#d3f9d8\",\n    \"#b2f2bb\",\n    \"#8ce99a\",\n    \"#69db7c\",\n    \"#51cf66\",\n    \"#40c057\",\n    \"#37b24d\",\n    \"#2f9e44\",\n    \"#2b8a3e\"\n  ],\n  \"lime\": [\n    \"#f4fce3\",\n    \"#e9fac8\",\n    \"#d8f5a2\",\n    \"#c0eb75\",\n    \"#a9e34b\",\n    \"#94d82d\",\n    \"#82c91e\",\n    \"#74b816\",\n    \"#66a80f\",\n    \"#5c940d\"\n  ],\n  \"yellow\": [\n    \"#fff9db\",\n    \"#fff3bf\",\n    \"#ffec99\",\n    \"#ffe066\",\n    \"#ffd43b\",\n    \"#fcc419\",\n    \"#fab005\",\n    \"#f59f00\",\n    \"#f08c00\",\n    \"#e67700\"\n  ],\n  \"orange\": [\n    \"#fff4e6\",\n    \"#ffe8cc\",\n    \"#ffd8a8\",\n    \"#ffc078\",\n    \"#ffa94d\",\n    \"#ff922b\",\n    \"#fd7e14\",\n    \"#f76707\",\n    \"#e8590c\",\n    \"#d9480f\"\n  ]\n}", "import type {\n  ExcalidrawElement,\n  FontFamilyValues,\n} from \"@excalidraw/element/types\";\nimport type { AppProps, AppState } from \"@excalidraw/excalidraw/types\";\n\nimport { COLOR_PALETTE } from \"./colors\";\n\nexport const isDarwin = /Mac|iPod|iPhone|iPad/.test(navigator.platform);\nexport const isWindows = /^Win/.test(navigator.platform);\nexport const isAndroid = /\\b(android)\\b/i.test(navigator.userAgent);\nexport const isFirefox =\n  \"netscape\" in window &&\n  navigator.userAgent.indexOf(\"rv:\") > 1 &&\n  navigator.userAgent.indexOf(\"Gecko\") > 1;\nexport const isChrome = navigator.userAgent.indexOf(\"Chrome\") !== -1;\nexport const isSafari =\n  !isChrome && navigator.userAgent.indexOf(\"Safari\") !== -1;\nexport const isIOS =\n  /iPad|iPhone/.test(navigator.platform) ||\n  // iPadOS 13+\n  (navigator.userAgent.includes(\"Mac\") && \"ontouchend\" in document);\n// keeping function so it can be mocked in test\nexport const isBrave = () =>\n  (navigator as any).brave?.isBrave?.name === \"isBrave\";\n\nexport const supportsResizeObserver =\n  typeof window !== \"undefined\" && \"ResizeObserver\" in window;\n\nexport const APP_NAME = \"Excalidraw\";\n\n// distance when creating text before it's considered `autoResize: false`\n// we're using higher threshold so that clicks that end up being drags\n// don't unintentionally create text elements that are wrapped to a few chars\n// (happens a lot with fast clicks with the text tool)\nexport const TEXT_AUTOWRAP_THRESHOLD = 36; // px\nexport const DRAGGING_THRESHOLD = 10; // px\nexport const LINE_CONFIRM_THRESHOLD = 8; // px\nexport const ELEMENT_SHIFT_TRANSLATE_AMOUNT = 5;\nexport const ELEMENT_TRANSLATE_AMOUNT = 1;\nexport const TEXT_TO_CENTER_SNAP_THRESHOLD = 30;\nexport const SHIFT_LOCKING_ANGLE = Math.PI / 12;\nexport const DEFAULT_LASER_COLOR = \"red\";\nexport const CURSOR_TYPE = {\n  TEXT: \"text\",\n  CROSSHAIR: \"crosshair\",\n  GRABBING: \"grabbing\",\n  GRAB: \"grab\",\n  POINTER: \"pointer\",\n  MOVE: \"move\",\n  AUTO: \"\",\n};\nexport const POINTER_BUTTON = {\n  MAIN: 0,\n  WHEEL: 1,\n  SECONDARY: 2,\n  TOUCH: -1,\n  ERASER: 5,\n} as const;\n\nexport const POINTER_EVENTS = {\n  enabled: \"all\",\n  disabled: \"none\",\n  // asserted as any so it can be freely assigned to React Element\n  // \"pointerEnvets\" CSS prop\n  inheritFromUI: \"var(--ui-pointerEvents)\" as any,\n} as const;\n\nexport enum EVENT {\n  COPY = \"copy\",\n  PASTE = \"paste\",\n  CUT = \"cut\",\n  KEYDOWN = \"keydown\",\n  KEYUP = \"keyup\",\n  MOUSE_MOVE = \"mousemove\",\n  RESIZE = \"resize\",\n  UNLOAD = \"unload\",\n  FOCUS = \"focus\",\n  BLUR = \"blur\",\n  DRAG_OVER = \"dragover\",\n  DROP = \"drop\",\n  GESTURE_END = \"gestureend\",\n  BEFORE_UNLOAD = \"beforeunload\",\n  GESTURE_START = \"gesturestart\",\n  GESTURE_CHANGE = \"gesturechange\",\n  POINTER_MOVE = \"pointermove\",\n  POINTER_DOWN = \"pointerdown\",\n  POINTER_UP = \"pointerup\",\n  STATE_CHANGE = \"statechange\",\n  WHEEL = \"wheel\",\n  TOUCH_START = \"touchstart\",\n  TOUCH_END = \"touchend\",\n  HASHCHANGE = \"hashchange\",\n  VISIBILITY_CHANGE = \"visibilitychange\",\n  SCROLL = \"scroll\",\n  // custom events\n  EXCALIDRAW_LINK = \"excalidraw-link\",\n  MENU_ITEM_SELECT = \"menu.itemSelect\",\n  MESSAGE = \"message\",\n  FULLSCREENCHANGE = \"fullscreenchange\",\n}\n\nexport const YOUTUBE_STATES = {\n  UNSTARTED: -1,\n  ENDED: 0,\n  PLAYING: 1,\n  PAUSED: 2,\n  BUFFERING: 3,\n  CUED: 5,\n} as const;\n\nexport const ENV = {\n  TEST: \"test\",\n  DEVELOPMENT: \"development\",\n};\n\nexport const CLASSES = {\n  SHAPE_ACTIONS_MENU: \"App-menu__left\",\n  ZOOM_ACTIONS: \"zoom-actions\",\n  SEARCH_MENU_INPUT_WRAPPER: \"layer-ui__search-inputWrapper\",\n};\n\nexport const CJK_HAND_DRAWN_FALLBACK_FONT = \"Xiaolai\";\nexport const WINDOWS_EMOJI_FALLBACK_FONT = \"Segoe UI Emoji\";\n\n/**\n * // TODO: shouldn't be really `const`, likely neither have integers as values, due to value for the custom fonts, which should likely be some hash.\n *\n * Let's think this through and consider:\n * - https://developer.mozilla.org/en-US/docs/Web/CSS/generic-family\n * - https://drafts.csswg.org/css-fonts-4/#font-family-prop\n * - https://learn.microsoft.com/en-us/typography/opentype/spec/ibmfc\n */\nexport const FONT_FAMILY = {\n  Virgil: 1,\n  Helvetica: 2,\n  Cascadia: 3,\n  // leave 4 unused as it was historically used for Assistant (which we don't use anymore) or custom font (Obsidian)\n  Excalifont: 5,\n  Nunito: 6,\n  \"Lilita One\": 7,\n  \"Comic Shanns\": 8,\n  \"Liberation Sans\": 9,\n};\n\nexport const FONT_FAMILY_FALLBACKS = {\n  [CJK_HAND_DRAWN_FALLBACK_FONT]: 100,\n  [WINDOWS_EMOJI_FALLBACK_FONT]: 1000,\n};\n\nexport const getFontFamilyFallbacks = (\n  fontFamily: number,\n): Array<keyof typeof FONT_FAMILY_FALLBACKS> => {\n  switch (fontFamily) {\n    case FONT_FAMILY.Excalifont:\n      return [CJK_HAND_DRAWN_FALLBACK_FONT, WINDOWS_EMOJI_FALLBACK_FONT];\n    default:\n      return [WINDOWS_EMOJI_FALLBACK_FONT];\n  }\n};\n\nexport const THEME = {\n  LIGHT: \"light\",\n  DARK: \"dark\",\n} as const;\n\nexport const FRAME_STYLE = {\n  strokeColor: \"#bbb\" as ExcalidrawElement[\"strokeColor\"],\n  strokeWidth: 2 as ExcalidrawElement[\"strokeWidth\"],\n  strokeStyle: \"solid\" as ExcalidrawElement[\"strokeStyle\"],\n  fillStyle: \"solid\" as ExcalidrawElement[\"fillStyle\"],\n  roughness: 0 as ExcalidrawElement[\"roughness\"],\n  roundness: null as ExcalidrawElement[\"roundness\"],\n  backgroundColor: \"transparent\" as ExcalidrawElement[\"backgroundColor\"],\n  radius: 8,\n  nameOffsetY: 3,\n  nameColorLightTheme: \"#999999\",\n  nameColorDarkTheme: \"#7a7a7a\",\n  nameFontSize: 14,\n  nameLineHeight: 1.25,\n};\n\nexport const MIN_FONT_SIZE = 1;\nexport const DEFAULT_FONT_SIZE = 20;\nexport const DEFAULT_FONT_FAMILY: FontFamilyValues = FONT_FAMILY.Excalifont;\nexport const DEFAULT_TEXT_ALIGN = \"left\";\nexport const DEFAULT_VERTICAL_ALIGN = \"top\";\nexport const DEFAULT_VERSION = \"{version}\";\nexport const DEFAULT_TRANSFORM_HANDLE_SPACING = 2;\n\nexport const SIDE_RESIZING_THRESHOLD = 2 * DEFAULT_TRANSFORM_HANDLE_SPACING;\n// a small epsilon to make side resizing always take precedence\n// (avoids an increase in renders and changes to tests)\nexport const EPSILON = 0.00001;\nexport const DEFAULT_COLLISION_THRESHOLD =\n  2 * SIDE_RESIZING_THRESHOLD - EPSILON;\n\nexport const COLOR_WHITE = \"#ffffff\";\nexport const COLOR_CHARCOAL_BLACK = \"#1e1e1e\";\n// keep this in sync with CSS\nexport const COLOR_VOICE_CALL = \"#a2f1a6\";\n\nexport const CANVAS_ONLY_ACTIONS = [\"selectAll\"];\n\nexport const DEFAULT_GRID_SIZE = 20;\nexport const DEFAULT_GRID_STEP = 5;\n\nexport const IMAGE_MIME_TYPES = {\n  svg: \"image/svg+xml\",\n  png: \"image/png\",\n  jpg: \"image/jpeg\",\n  gif: \"image/gif\",\n  webp: \"image/webp\",\n  bmp: \"image/bmp\",\n  ico: \"image/x-icon\",\n  avif: \"image/avif\",\n  jfif: \"image/jfif\",\n} as const;\n\nexport const MIME_TYPES = {\n  text: \"text/plain\",\n  html: \"text/html\",\n  json: \"application/json\",\n  // excalidraw data\n  excalidraw: \"application/vnd.excalidraw+json\",\n  excalidrawlib: \"application/vnd.excalidrawlib+json\",\n  // image-encoded excalidraw data\n  \"excalidraw.svg\": \"image/svg+xml\",\n  \"excalidraw.png\": \"image/png\",\n  // binary\n  binary: \"application/octet-stream\",\n  // image\n  ...IMAGE_MIME_TYPES,\n} as const;\n\nexport const ALLOWED_PASTE_MIME_TYPES = [\n  MIME_TYPES.text,\n  MIME_TYPES.html,\n  ...Object.values(IMAGE_MIME_TYPES),\n] as const;\n\nexport const EXPORT_IMAGE_TYPES = {\n  png: \"png\",\n  svg: \"svg\",\n  clipboard: \"clipboard\",\n} as const;\n\nexport const EXPORT_DATA_TYPES = {\n  excalidraw: \"excalidraw\",\n  excalidrawClipboard: \"excalidraw/clipboard\",\n  excalidrawLibrary: \"excalidrawlib\",\n  excalidrawClipboardWithAPI: \"excalidraw-api/clipboard\",\n} as const;\n\nexport const EXPORT_SOURCE =\n  window.EXCALIDRAW_EXPORT_SOURCE || window.location.origin;\n\n// time in milliseconds\nexport const IMAGE_RENDER_TIMEOUT = 500;\nexport const TAP_TWICE_TIMEOUT = 300;\nexport const TOUCH_CTX_MENU_TIMEOUT = 500;\nexport const TITLE_TIMEOUT = 10000;\nexport const VERSION_TIMEOUT = 30000;\nexport const SCROLL_TIMEOUT = 100;\nexport const ZOOM_STEP = 0.1;\nexport const MIN_ZOOM = 0.1;\nexport const MAX_ZOOM = 30;\nexport const HYPERLINK_TOOLTIP_DELAY = 300;\n\n// Report a user inactive after IDLE_THRESHOLD milliseconds\nexport const IDLE_THRESHOLD = 60_000;\n// Report a user active each ACTIVE_THRESHOLD milliseconds\nexport const ACTIVE_THRESHOLD = 3_000;\n\n// duplicates --theme-filter, should be removed soon\nexport const THEME_FILTER = \"invert(93%) hue-rotate(180deg)\";\n\nexport const URL_QUERY_KEYS = {\n  addLibrary: \"addLibrary\",\n} as const;\n\nexport const URL_HASH_KEYS = {\n  addLibrary: \"addLibrary\",\n} as const;\n\nexport const DEFAULT_UI_OPTIONS: AppProps[\"UIOptions\"] = {\n  canvasActions: {\n    changeViewBackgroundColor: true,\n    clearCanvas: true,\n    export: { saveFileToDisk: true },\n    loadScene: true,\n    saveToActiveFile: true,\n    toggleTheme: null,\n    saveAsImage: true,\n  },\n  tools: {\n    image: true,\n  },\n};\n\n// breakpoints\n// -----------------------------------------------------------------------------\n// md screen\nexport const MQ_MAX_WIDTH_PORTRAIT = 730;\nexport const MQ_MAX_WIDTH_LANDSCAPE = 1000;\nexport const MQ_MAX_HEIGHT_LANDSCAPE = 500;\n// sidebar\nexport const MQ_RIGHT_SIDEBAR_MIN_WIDTH = 1229;\n// -----------------------------------------------------------------------------\n\nexport const MAX_DECIMALS_FOR_SVG_EXPORT = 2;\n\nexport const EXPORT_SCALES = [1, 2, 3];\nexport const DEFAULT_EXPORT_PADDING = 10; // px\n\nexport const DEFAULT_MAX_IMAGE_WIDTH_OR_HEIGHT = 1440;\n\nexport const MAX_ALLOWED_FILE_BYTES = 4 * 1024 * 1024;\n\nexport const SVG_NS = \"http://www.w3.org/2000/svg\";\n\nexport const ENCRYPTION_KEY_BITS = 128;\n\nexport const VERSIONS = {\n  excalidraw: 2,\n  excalidrawLibrary: 2,\n} as const;\n\nexport const BOUND_TEXT_PADDING = 5;\nexport const ARROW_LABEL_WIDTH_FRACTION = 0.7;\nexport const ARROW_LABEL_FONT_SIZE_TO_MIN_WIDTH_RATIO = 11;\n\nexport const VERTICAL_ALIGN = {\n  TOP: \"top\",\n  MIDDLE: \"middle\",\n  BOTTOM: \"bottom\",\n};\n\nexport const TEXT_ALIGN = {\n  LEFT: \"left\",\n  CENTER: \"center\",\n  RIGHT: \"right\",\n};\n\nexport const ELEMENT_READY_TO_ERASE_OPACITY = 20;\n\n// Radius represented as 25% of element's largest side (width/height).\n// Used for LEGACY and PROPORTIONAL_RADIUS algorithms, or when the element is\n// below the cutoff size.\nexport const DEFAULT_PROPORTIONAL_RADIUS = 0.25;\n// Fixed radius for the ADAPTIVE_RADIUS algorithm. In pixels.\nexport const DEFAULT_ADAPTIVE_RADIUS = 32;\n// roundness type (algorithm)\nexport const ROUNDNESS = {\n  // Used for legacy rounding (rectangles), which currently works the same\n  // as PROPORTIONAL_RADIUS, but we need to differentiate for UI purposes and\n  // forwards-compat.\n  LEGACY: 1,\n\n  // Used for linear elements & diamonds\n  PROPORTIONAL_RADIUS: 2,\n\n  // Current default algorithm for rectangles, using fixed pixel radius.\n  // It's working similarly to a regular border-radius, but attemps to make\n  // radius visually similar across differnt element sizes, especially\n  // very large and very small elements.\n  //\n  // NOTE right now we don't allow configuration and use a constant radius\n  // (see DEFAULT_ADAPTIVE_RADIUS constant)\n  ADAPTIVE_RADIUS: 3,\n} as const;\n\nexport const ROUGHNESS = {\n  architect: 0,\n  artist: 1,\n  cartoonist: 2,\n} as const;\n\nexport const STROKE_WIDTH = {\n  thin: 1,\n  bold: 2,\n  extraBold: 4,\n} as const;\n\nexport const DEFAULT_ELEMENT_PROPS: {\n  strokeColor: ExcalidrawElement[\"strokeColor\"];\n  backgroundColor: ExcalidrawElement[\"backgroundColor\"];\n  fillStyle: ExcalidrawElement[\"fillStyle\"];\n  strokeWidth: ExcalidrawElement[\"strokeWidth\"];\n  strokeStyle: ExcalidrawElement[\"strokeStyle\"];\n  roughness: ExcalidrawElement[\"roughness\"];\n  opacity: ExcalidrawElement[\"opacity\"];\n  locked: ExcalidrawElement[\"locked\"];\n} = {\n  strokeColor: COLOR_PALETTE.black,\n  backgroundColor: COLOR_PALETTE.transparent,\n  fillStyle: \"solid\",\n  strokeWidth: 2,\n  strokeStyle: \"solid\",\n  roughness: ROUGHNESS.artist,\n  opacity: 100,\n  locked: false,\n};\n\nexport const LIBRARY_SIDEBAR_TAB = \"library\";\nexport const CANVAS_SEARCH_TAB = \"search\";\n\nexport const DEFAULT_SIDEBAR = {\n  name: \"default\",\n  defaultTab: LIBRARY_SIDEBAR_TAB,\n} as const;\n\nexport const LIBRARY_DISABLED_TYPES = new Set([\n  \"iframe\",\n  \"embeddable\",\n  \"image\",\n] as const);\n\n// use these constants to easily identify reference sites\nexport const TOOL_TYPE = {\n  selection: \"selection\",\n  rectangle: \"rectangle\",\n  diamond: \"diamond\",\n  ellipse: \"ellipse\",\n  arrow: \"arrow\",\n  line: \"line\",\n  freedraw: \"freedraw\",\n  text: \"text\",\n  image: \"image\",\n  eraser: \"eraser\",\n  hand: \"hand\",\n  frame: \"frame\",\n  magicframe: \"magicframe\",\n  embeddable: \"embeddable\",\n  laser: \"laser\",\n} as const;\n\nexport const EDITOR_LS_KEYS = {\n  OAI_API_KEY: \"excalidraw-oai-api-key\",\n  // legacy naming (non)scheme\n  MERMAID_TO_EXCALIDRAW: \"mermaid-to-excalidraw\",\n  PUBLISH_LIBRARY: \"publish-library-data\",\n} as const;\n\n/**\n * not translated as this is used only in public, stateless API as default value\n * where filename is optional and we can't retrieve name from app state\n */\nexport const DEFAULT_FILENAME = \"Untitled\";\n\nexport const STATS_PANELS = { generalStats: 1, elementProperties: 2 } as const;\n\nexport const MIN_WIDTH_OR_HEIGHT = 1;\n\nexport const ARROW_TYPE: { [T in AppState[\"currentItemArrowType\"]]: T } = {\n  sharp: \"sharp\",\n  round: \"round\",\n  elbow: \"elbow\",\n};\n\nexport const DEFAULT_REDUCED_GLOBAL_ALPHA = 0.3;\nexport const ELEMENT_LINK_KEY = \"element\";\n\n/** used in tests */\nexport const ORIG_ID = Symbol.for(\"__test__originalId__\");\n\nexport enum UserIdleState {\n  ACTIVE = \"active\",\n  AWAY = \"away\",\n  IDLE = \"idle\",\n}\n", "import type {\n  ExcalidrawTextElement,\n  FontFamilyValues,\n} from \"@excalidraw/element/types\";\n\nimport { FONT_FAMILY, FONT_FAMILY_FALLBACKS } from \"./constants\";\n\n/**\n * Encapsulates font metrics with additional font metadata.\n * */\nexport interface FontMetadata {\n  /** for head & hhea metrics read the woff2 with https://fontdrop.info/ */\n  metrics: {\n    /** head.unitsPerEm metric */\n    unitsPerEm: 1000 | 1024 | 2048;\n    /** hhea.ascender metric */\n    ascender: number;\n    /** hhea.descender metric */\n    descender: number;\n    /** harcoded unitless line-height, https://github.com/excalidraw/excalidraw/pull/6360#issuecomment-1477635971 */\n    lineHeight: number;\n  };\n  /** flag to indicate a deprecated font */\n  deprecated?: true;\n  /** flag to indicate a server-side only font */\n  serverSide?: true;\n  /** flag to indiccate a local-only font */\n  local?: true;\n  /** flag to indicate a fallback font */\n  fallback?: true;\n}\n\nexport const FONT_METADATA: Record<number, FontMetadata> = {\n  [FONT_FAMILY.Excalifont]: {\n    metrics: {\n      unitsPerEm: 1000,\n      ascender: 886,\n      descender: -374,\n      lineHeight: 1.25,\n    },\n  },\n  [FONT_FAMILY.Nunito]: {\n    metrics: {\n      unitsPerEm: 1000,\n      ascender: 1011,\n      descender: -353,\n      lineHeight: 1.35,\n    },\n  },\n  [FONT_FAMILY[\"Lilita One\"]]: {\n    metrics: {\n      unitsPerEm: 1000,\n      ascender: 923,\n      descender: -220,\n      lineHeight: 1.15,\n    },\n  },\n  [FONT_FAMILY[\"Comic Shanns\"]]: {\n    metrics: {\n      unitsPerEm: 1000,\n      ascender: 750,\n      descender: -250,\n      lineHeight: 1.25,\n    },\n  },\n  [FONT_FAMILY.Virgil]: {\n    metrics: {\n      unitsPerEm: 1000,\n      ascender: 886,\n      descender: -374,\n      lineHeight: 1.25,\n    },\n    deprecated: true,\n  },\n  [FONT_FAMILY.Helvetica]: {\n    metrics: {\n      unitsPerEm: 2048,\n      ascender: 1577,\n      descender: -471,\n      lineHeight: 1.15,\n    },\n    deprecated: true,\n    local: true,\n  },\n  [FONT_FAMILY.Cascadia]: {\n    metrics: {\n      unitsPerEm: 2048,\n      ascender: 1900,\n      descender: -480,\n      lineHeight: 1.2,\n    },\n    deprecated: true,\n  },\n  [FONT_FAMILY[\"Liberation Sans\"]]: {\n    metrics: {\n      unitsPerEm: 2048,\n      ascender: 1854,\n      descender: -434,\n      lineHeight: 1.15,\n    },\n    serverSide: true,\n  },\n  [FONT_FAMILY_FALLBACKS.Xiaolai]: {\n    metrics: {\n      unitsPerEm: 1000,\n      ascender: 880,\n      descender: -144,\n      lineHeight: 1.15,\n    },\n    fallback: true,\n  },\n  [FONT_FAMILY_FALLBACKS[\"Segoe UI Emoji\"]]: {\n    metrics: {\n      // reusing Excalifont metrics\n      unitsPerEm: 1000,\n      ascender: 886,\n      descender: -374,\n      lineHeight: 1.25,\n    },\n    local: true,\n    fallback: true,\n  },\n};\n\n/** Unicode ranges defined by google fonts */\nexport const GOOGLE_FONTS_RANGES = {\n  LATIN:\n    \"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD\",\n  LATIN_EXT:\n    \"U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF\",\n  CYRILIC_EXT:\n    \"U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F\",\n  CYRILIC: \"U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116\",\n  VIETNAMESE:\n    \"U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+0300-0301, U+0303-0304, U+0308-0309, U+0323, U+0329, U+1EA0-1EF9, U+20AB\",\n};\n\n/** local protocol to skip the local font from registering or inlining */\nexport const LOCAL_FONT_PROTOCOL = \"local:\";\n\n/**\n * Calculates vertical offset for a text with alphabetic baseline.\n */\nexport const getVerticalOffset = (\n  fontFamily: ExcalidrawTextElement[\"fontFamily\"],\n  fontSize: ExcalidrawTextElement[\"fontSize\"],\n  lineHeightPx: number,\n) => {\n  const { unitsPerEm, ascender, descender } =\n    FONT_METADATA[fontFamily]?.metrics ||\n    FONT_METADATA[FONT_FAMILY.Excalifont].metrics;\n\n  const fontSizeEm = fontSize / unitsPerEm;\n  const lineGap =\n    (lineHeightPx - fontSizeEm * ascender + fontSizeEm * descender) / 2;\n\n  const verticalOffset = fontSizeEm * ascender + lineGap;\n  return verticalOffset;\n};\n\n/**\n * Gets line height for a selected family.\n */\nexport const getLineHeight = (fontFamily: FontFamilyValues) => {\n  const { lineHeight } =\n    FONT_METADATA[fontFamily]?.metrics ||\n    FONT_METADATA[FONT_FAMILY.Excalifont].metrics;\n\n  return lineHeight as ExcalidrawTextElement[\"lineHeight\"];\n};\n", "import { promiseTry, resolvablePromise } from \".\";\n\nimport type { ResolvablePromise } from \".\";\n\nimport type { MaybePromise } from \"./utility-types\";\n\ntype Job<T, TArgs extends unknown[]> = (...args: TArgs) => MaybePromise<T>;\n\ntype QueueJob<T, TArgs extends unknown[]> = {\n  jobFactory: Job<T, TArgs>;\n  promise: ResolvablePromise<T>;\n  args: TArgs;\n};\n\nexport class Queue {\n  private jobs: QueueJob<any, any[]>[] = [];\n  private running = false;\n\n  private tick() {\n    if (this.running) {\n      return;\n    }\n    const job = this.jobs.shift();\n    if (job) {\n      this.running = true;\n      job.promise.resolve(\n        promiseTry(job.jobFactory, ...job.args).finally(() => {\n          this.running = false;\n          this.tick();\n        }),\n      );\n    } else {\n      this.running = false;\n    }\n  }\n\n  push<TValue, TArgs extends unknown[]>(\n    jobFactory: Job<TValue, TArgs>,\n    ...args: TArgs\n  ): Promise<TValue> {\n    const promise = resolvablePromise<TValue>();\n    this.jobs.push({ jobFactory, promise, args });\n\n    this.tick();\n\n    return promise;\n  }\n}\n", "import { isDarwin } from \"./constants\";\n\nimport type { ValueOf } from \"./utility-types\";\n\nexport const CODES = {\n  EQUAL: \"Equal\",\n  MINUS: \"Minus\",\n  NUM_ADD: \"NumpadAdd\",\n  NUM_SUBTRACT: \"NumpadSubtract\",\n  NUM_ZERO: \"Numpad0\",\n  BRACKET_RIGHT: \"BracketRight\",\n  BRACKET_LEFT: \"BracketLeft\",\n  ONE: \"Digit1\",\n  TWO: \"Digit2\",\n  THREE: \"Digit3\",\n  NINE: \"Digit9\",\n  QUOTE: \"Quote\",\n  ZERO: \"Digit0\",\n  SLASH: \"Slash\",\n  C: \"KeyC\",\n  D: \"KeyD\",\n  H: \"KeyH\",\n  V: \"KeyV\",\n  Z: \"KeyZ\",\n  Y: \"KeyY\",\n  R: \"KeyR\",\n  S: \"KeyS\",\n} as const;\n\nexport const KEYS = {\n  ARROW_DOWN: \"ArrowDown\",\n  ARROW_LEFT: \"ArrowLeft\",\n  ARROW_RIGHT: \"ArrowRight\",\n  ARROW_UP: \"ArrowUp\",\n  PAGE_UP: \"PageUp\",\n  PAGE_DOWN: \"PageDown\",\n  BACKSPACE: \"Backspace\",\n  ALT: \"Alt\",\n  CTRL_OR_CMD: isDarwin ? \"metaKey\" : \"ctrlKey\",\n  DELETE: \"Delete\",\n  ENTER: \"Enter\",\n  ESCAPE: \"Escape\",\n  QUESTION_MARK: \"?\",\n  SPACE: \" \",\n  TAB: \"Tab\",\n  CHEVRON_LEFT: \"<\",\n  CHEVRON_RIGHT: \">\",\n  PERIOD: \".\",\n  COMMA: \",\",\n  SUBTRACT: \"-\",\n  SLASH: \"/\",\n\n  A: \"a\",\n  C: \"c\",\n  D: \"d\",\n  E: \"e\",\n  F: \"f\",\n  G: \"g\",\n  H: \"h\",\n  I: \"i\",\n  L: \"l\",\n  O: \"o\",\n  P: \"p\",\n  Q: \"q\",\n  R: \"r\",\n  S: \"s\",\n  T: \"t\",\n  V: \"v\",\n  X: \"x\",\n  Y: \"y\",\n  Z: \"z\",\n  K: \"k\",\n  W: \"w\",\n\n  0: \"0\",\n  1: \"1\",\n  2: \"2\",\n  3: \"3\",\n  4: \"4\",\n  5: \"5\",\n  6: \"6\",\n  7: \"7\",\n  8: \"8\",\n  9: \"9\",\n} as const;\n\nexport type Key = keyof typeof KEYS;\n\n// defines key code mapping for matching codes as fallback to respective keys on non-latin keyboard layouts\nexport const KeyCodeMap = new Map<ValueOf<typeof KEYS>, ValueOf<typeof CODES>>([\n  [KEYS.Z, CODES.Z],\n  [KEYS.Y, CODES.Y],\n]);\n\nexport const isLatinChar = (key: string) => /^[a-z]$/.test(key.toLowerCase());\n\n/**\n * Used to match key events for any keyboard layout, especially on Windows and Linux,\n * where non-latin character with modified (CMD) is not substituted with latin-based alternative.\n *\n * Uses `event.key` when it's latin, otherwise fallbacks to `event.code` (if mapping exists).\n *\n * Example of pressing \"z\" on different layouts, with the chosen key or code highlighted in []:\n *\n * Layout                | Code  | Key | Comment\n * --------------------- | ----- | --- | -------\n * U.S.                  |  KeyZ  | [z] |\n * Czech                 |  KeyY  | [z] |\n * Turkish               |  KeyN  | [z] |\n * French                |  KeyW  | [z] |\n * Macedonian            | [KeyZ] |  \u0437  | z with cmd; \u0437 is Cyrillic equivalent of z\n * Russian               | [KeyZ] |  \u044F  | z with cmd\n * Serbian               | [KeyZ] |  \u0455  | z with cmd\n * Greek                 | [KeyZ] |  \u03B6  | z with cmd; also \u03B6 is Greek equivalent of z\n * Hebrew                | [KeyZ] |  \u05D6  | z with cmd; also \u05D6 is Hebrew equivalent of z\n * Pinyin - Simplified   |  KeyZ  | [z] | due to IME\n * Cangije - Traditional | [KeyZ] |  \u91CD | z with cmd\n * Japanese              | [KeyZ] |  \u3064 | z with cmd\n * 2-Set Korean          | [KeyZ] |  \u314B | z with cmd\n *\n * More details in https://github.com/excalidraw/excalidraw/pull/5944\n */\nexport const matchKey = (\n  event: KeyboardEvent | React.KeyboardEvent<Element>,\n  key: ValueOf<typeof KEYS>,\n): boolean => {\n  // for latin layouts use key\n  if (key === event.key.toLowerCase()) {\n    return true;\n  }\n\n  // non-latin layouts fallback to code\n  const code = KeyCodeMap.get(key);\n  return Boolean(code && !isLatinChar(event.key) && event.code === code);\n};\n\nexport const isArrowKey = (key: string) =>\n  key === KEYS.ARROW_LEFT ||\n  key === KEYS.ARROW_RIGHT ||\n  key === KEYS.ARROW_DOWN ||\n  key === KEYS.ARROW_UP;\n\nexport const shouldResizeFromCenter = (event: MouseEvent | KeyboardEvent) =>\n  event.altKey;\n\nexport const shouldMaintainAspectRatio = (event: MouseEvent | KeyboardEvent) =>\n  event.shiftKey;\n\nexport const shouldRotateWithDiscreteAngle = (\n  event: MouseEvent | KeyboardEvent | React.PointerEvent<HTMLCanvasElement>,\n) => event.shiftKey;\n", "import {\n  pointFromPair,\n  type GlobalPoint,\n  type LocalPoint,\n} from \"@excalidraw/math\";\n\nimport type { NullableGridSize } from \"@excalidraw/excalidraw/types\";\n\nexport const getSizeFromPoints = (\n  points: readonly (GlobalPoint | LocalPoint)[],\n) => {\n  const xs = points.map((point) => point[0]);\n  const ys = points.map((point) => point[1]);\n  return {\n    width: Math.max(...xs) - Math.min(...xs),\n    height: Math.max(...ys) - Math.min(...ys),\n  };\n};\n\n/** @arg dimension, 0 for rescaling only x, 1 for y */\nexport const rescalePoints = <Point extends GlobalPoint | LocalPoint>(\n  dimension: 0 | 1,\n  newSize: number,\n  points: readonly Point[],\n  normalize: boolean,\n): Point[] => {\n  const coordinates = points.map((point) => point[dimension]);\n  const maxCoordinate = Math.max(...coordinates);\n  const minCoordinate = Math.min(...coordinates);\n  const size = maxCoordinate - minCoordinate;\n  const scale = size === 0 ? 1 : newSize / size;\n\n  let nextMinCoordinate = Infinity;\n\n  const scaledPoints = points.map((point): Point => {\n    const newCoordinate = point[dimension] * scale;\n    const newPoint = [...point];\n    newPoint[dimension] = newCoordinate;\n    if (newCoordinate < nextMinCoordinate) {\n      nextMinCoordinate = newCoordinate;\n    }\n    return newPoint as Point;\n  });\n\n  if (!normalize) {\n    return scaledPoints;\n  }\n\n  if (scaledPoints.length === 2) {\n    // we don't translate two-point lines\n    return scaledPoints;\n  }\n\n  const translation = minCoordinate - nextMinCoordinate;\n\n  const nextPoints = scaledPoints.map((scaledPoint) =>\n    pointFromPair<Point>(\n      scaledPoint.map((value, currentDimension) => {\n        return currentDimension === dimension ? value + translation : value;\n      }) as [number, number],\n    ),\n  );\n\n  return nextPoints;\n};\n\n// TODO: Rounding this point causes some shake when free drawing\nexport const getGridPoint = (\n  x: number,\n  y: number,\n  gridSize: NullableGridSize,\n): [number, number] => {\n  if (gridSize) {\n    return [\n      Math.round(x / gridSize) * gridSize,\n      Math.round(y / gridSize) * gridSize,\n    ];\n  }\n  return [x, y];\n};\n", "export * from \"./angle\";\nexport * from \"./curve\";\nexport * from \"./line\";\nexport * from \"./point\";\nexport * from \"./polygon\";\nexport * from \"./range\";\nexport * from \"./rectangle\";\nexport * from \"./segment\";\nexport * from \"./triangle\";\nexport * from \"./types\";\nexport * from \"./vector\";\nexport * from \"./utils\";\n", "import { PRECISION } from \"./utils\";\n\nimport type {\n  Degrees,\n  GlobalPoint,\n  LocalPoint,\n  PolarCoords,\n  Radians,\n} from \"./types\";\n\n// TODO: Simplify with modulo and fix for angles beyond 4*Math.PI and - 4*Math.PI\nexport const normalizeRadians = (angle: Radians): Radians => {\n  if (angle < 0) {\n    return (angle + 2 * Math.PI) as Radians;\n  }\n  if (angle >= 2 * Math.PI) {\n    return (angle - 2 * Math.PI) as Radians;\n  }\n  return angle;\n};\n\n/**\n * Return the polar coordinates for the given cartesian point represented by\n * (x, y) for the center point 0,0 where the first number returned is the radius,\n * the second is the angle in radians.\n */\nexport const cartesian2Polar = <P extends GlobalPoint | LocalPoint>([\n  x,\n  y,\n]: P): PolarCoords => [\n  Math.hypot(x, y),\n  normalizeRadians(Math.atan2(y, x) as Radians),\n];\n\nexport function degreesToRadians(degrees: Degrees): Radians {\n  return ((degrees * Math.PI) / 180) as Radians;\n}\n\nexport function radiansToDegrees(degrees: Radians): Degrees {\n  return ((degrees * 180) / Math.PI) as Degrees;\n}\n\n/**\n * Determines if the provided angle is a right angle.\n *\n * @param rads The angle to measure\n * @returns TRUE if the provided angle is a right angle\n */\nexport function isRightAngleRads(rads: Radians): boolean {\n  return Math.abs(Math.sin(2 * rads)) < PRECISION;\n}\n", "export const PRECISION = 10e-5;\n\nexport const clamp = (value: number, min: number, max: number) => {\n  return Math.min(Math.max(value, min), max);\n};\n\nexport const round = (\n  value: number,\n  precision: number,\n  func: \"round\" | \"floor\" | \"ceil\" = \"round\",\n) => {\n  const multiplier = Math.pow(10, precision);\n\n  return Math[func]((value + Number.EPSILON) * multiplier) / multiplier;\n};\n\nexport const roundToStep = (\n  value: number,\n  step: number,\n  func: \"round\" | \"floor\" | \"ceil\" = \"round\",\n): number => {\n  const factor = 1 / step;\n  return Math[func](value * factor) / factor;\n};\n\nexport const average = (a: number, b: number) => (a + b) / 2;\n\nexport const isFiniteNumber = (value: any): value is number => {\n  return typeof value === \"number\" && Number.isFinite(value);\n};\n\nexport const isCloseTo = (a: number, b: number, precision = PRECISION) =>\n  Math.abs(a - b) < precision;\n", "import type { Bounds } from \"@excalidraw/element/bounds\";\n\nimport { isPoint, pointDistance, pointFrom } from \"./point\";\nimport { rectangle, rectangleIntersectLineSegment } from \"./rectangle\";\n\nimport type { Curve, GlobalPoint, LineSegment, LocalPoint } from \"./types\";\n\n/**\n *\n * @param a\n * @param b\n * @param c\n * @param d\n * @returns\n */\nexport function curve<Point extends GlobalPoint | LocalPoint>(\n  a: Point,\n  b: Point,\n  c: Point,\n  d: Point,\n) {\n  return [a, b, c, d] as Curve<Point>;\n}\n\nfunction gradient(\n  f: (t: number, s: number) => number,\n  t0: number,\n  s0: number,\n  delta: number = 1e-6,\n): number[] {\n  return [\n    (f(t0 + delta, s0) - f(t0 - delta, s0)) / (2 * delta),\n    (f(t0, s0 + delta) - f(t0, s0 - delta)) / (2 * delta),\n  ];\n}\n\nfunction solve(\n  f: (t: number, s: number) => [number, number],\n  t0: number,\n  s0: number,\n  tolerance: number = 1e-3,\n  iterLimit: number = 10,\n): number[] | null {\n  let error = Infinity;\n  let iter = 0;\n\n  while (error >= tolerance) {\n    if (iter >= iterLimit) {\n      return null;\n    }\n\n    const y0 = f(t0, s0);\n    const jacobian = [\n      gradient((t, s) => f(t, s)[0], t0, s0),\n      gradient((t, s) => f(t, s)[1], t0, s0),\n    ];\n    const b = [[-y0[0]], [-y0[1]]];\n    const det =\n      jacobian[0][0] * jacobian[1][1] - jacobian[0][1] * jacobian[1][0];\n\n    if (det === 0) {\n      return null;\n    }\n\n    const iJ = [\n      [jacobian[1][1] / det, -jacobian[0][1] / det],\n      [-jacobian[1][0] / det, jacobian[0][0] / det],\n    ];\n    const h = [\n      [iJ[0][0] * b[0][0] + iJ[0][1] * b[1][0]],\n      [iJ[1][0] * b[0][0] + iJ[1][1] * b[1][0]],\n    ];\n\n    t0 = t0 + h[0][0];\n    s0 = s0 + h[1][0];\n\n    const [tErr, sErr] = f(t0, s0);\n    error = Math.max(Math.abs(tErr), Math.abs(sErr));\n    iter += 1;\n  }\n\n  return [t0, s0];\n}\n\nconst bezierEquation = <Point extends GlobalPoint | LocalPoint>(\n  c: Curve<Point>,\n  t: number,\n) =>\n  pointFrom<Point>(\n    (1 - t) ** 3 * c[0][0] +\n      3 * (1 - t) ** 2 * t * c[1][0] +\n      3 * (1 - t) * t ** 2 * c[2][0] +\n      t ** 3 * c[3][0],\n    (1 - t) ** 3 * c[0][1] +\n      3 * (1 - t) ** 2 * t * c[1][1] +\n      3 * (1 - t) * t ** 2 * c[2][1] +\n      t ** 3 * c[3][1],\n  );\n\n/**\n * Computes the intersection between a cubic spline and a line segment.\n */\nexport function curveIntersectLineSegment<\n  Point extends GlobalPoint | LocalPoint,\n>(c: Curve<Point>, l: LineSegment<Point>): Point[] {\n  // Optimize by doing a cheap bounding box check first\n  const bounds = curveBounds(c);\n  if (\n    rectangleIntersectLineSegment(\n      rectangle(\n        pointFrom(bounds[0], bounds[1]),\n        pointFrom(bounds[2], bounds[3]),\n      ),\n      l,\n    ).length === 0\n  ) {\n    return [];\n  }\n\n  const line = (s: number) =>\n    pointFrom<Point>(\n      l[0][0] + s * (l[1][0] - l[0][0]),\n      l[0][1] + s * (l[1][1] - l[0][1]),\n    );\n\n  const initial_guesses: [number, number][] = [\n    [0.5, 0],\n    [0.2, 0],\n    [0.8, 0],\n  ];\n\n  const calculate = ([t0, s0]: [number, number]) => {\n    const solution = solve(\n      (t: number, s: number) => {\n        const bezier_point = bezierEquation(c, t);\n        const line_point = line(s);\n\n        return [\n          bezier_point[0] - line_point[0],\n          bezier_point[1] - line_point[1],\n        ];\n      },\n      t0,\n      s0,\n    );\n\n    if (!solution) {\n      return null;\n    }\n\n    const [t, s] = solution;\n\n    if (t < 0 || t > 1 || s < 0 || s > 1) {\n      return null;\n    }\n\n    return bezierEquation(c, t);\n  };\n\n  let solution = calculate(initial_guesses[0]);\n  if (solution) {\n    return [solution];\n  }\n\n  solution = calculate(initial_guesses[1]);\n  if (solution) {\n    return [solution];\n  }\n\n  solution = calculate(initial_guesses[2]);\n  if (solution) {\n    return [solution];\n  }\n\n  return [];\n}\n\n/**\n * Finds the closest point on the Bezier curve from another point\n *\n * @param x\n * @param y\n * @param P0\n * @param P1\n * @param P2\n * @param P3\n * @param tolerance\n * @param maxLevel\n * @returns\n */\nexport function curveClosestPoint<Point extends GlobalPoint | LocalPoint>(\n  c: Curve<Point>,\n  p: Point,\n  tolerance: number = 1e-3,\n): Point | null {\n  const localMinimum = (\n    min: number,\n    max: number,\n    f: (t: number) => number,\n    e: number = tolerance,\n  ) => {\n    let m = min;\n    let n = max;\n    let k;\n\n    while (n - m > e) {\n      k = (n + m) / 2;\n      if (f(k - e) < f(k + e)) {\n        n = k;\n      } else {\n        m = k;\n      }\n    }\n\n    return k;\n  };\n\n  const maxSteps = 30;\n  let closestStep = 0;\n  for (let min = Infinity, step = 0; step < maxSteps; step++) {\n    const d = pointDistance(p, bezierEquation(c, step / maxSteps));\n    if (d < min) {\n      min = d;\n      closestStep = step;\n    }\n  }\n\n  const t0 = Math.max((closestStep - 1) / maxSteps, 0);\n  const t1 = Math.min((closestStep + 1) / maxSteps, 1);\n  const solution = localMinimum(t0, t1, (t) =>\n    pointDistance(p, bezierEquation(c, t)),\n  );\n\n  if (!solution) {\n    return null;\n  }\n\n  return bezierEquation(c, solution);\n}\n\n/**\n * Determines the distance between a point and the closest point on the\n * Bezier curve.\n *\n * @param c The curve to test\n * @param p The point to measure from\n */\nexport function curvePointDistance<Point extends GlobalPoint | LocalPoint>(\n  c: Curve<Point>,\n  p: Point,\n) {\n  const closest = curveClosestPoint(c, p);\n\n  if (!closest) {\n    return 0;\n  }\n\n  return pointDistance(p, closest);\n}\n\n/**\n * Determines if the parameter is a Curve\n */\nexport function isCurve<P extends GlobalPoint | LocalPoint>(\n  v: unknown,\n): v is Curve<P> {\n  return (\n    Array.isArray(v) &&\n    v.length === 4 &&\n    isPoint(v[0]) &&\n    isPoint(v[1]) &&\n    isPoint(v[2]) &&\n    isPoint(v[3])\n  );\n}\n\nfunction curveBounds<Point extends GlobalPoint | LocalPoint>(\n  c: Curve<Point>,\n): Bounds {\n  const [P0, P1, P2, P3] = c;\n  const x = [P0[0], P1[0], P2[0], P3[0]];\n  const y = [P0[1], P1[1], P2[1], P3[1]];\n  return [Math.min(...x), Math.min(...y), Math.max(...x), Math.max(...y)];\n}\n", "import { degreesToRadians } from \"./angle\";\nimport { PRECISION } from \"./utils\";\nimport { vectorFromPoint, vectorScale } from \"./vector\";\n\nimport type {\n  LocalPoint,\n  GlobalPoint,\n  Radians,\n  Degrees,\n  Vector,\n} from \"./types\";\n\n/**\n * Create a properly typed Point instance from the X and Y coordinates.\n *\n * @param x The X coordinate\n * @param y The Y coordinate\n * @returns The branded and created point\n */\nexport function pointFrom<Point extends GlobalPoint | LocalPoint>(\n  x: number,\n  y: number,\n): Point {\n  return [x, y] as Point;\n}\n\n/**\n * Converts and remaps an array containing a pair of numbers to Point.\n *\n * @param numberArray The number array to check and to convert to Point\n * @returns The point instance\n */\nexport function pointFromArray<Point extends GlobalPoint | LocalPoint>(\n  numberArray: number[],\n): Point | undefined {\n  return numberArray.length === 2\n    ? pointFrom<Point>(numberArray[0], numberArray[1])\n    : undefined;\n}\n\n/**\n * Converts and remaps a pair of numbers to Point.\n *\n * @param pair A number pair to convert to Point\n * @returns The point instance\n */\nexport function pointFromPair<Point extends GlobalPoint | LocalPoint>(\n  pair: [number, number],\n): Point {\n  return pair as Point;\n}\n\n/**\n * Convert a vector to a point.\n *\n * @param v The vector to convert\n * @returns The point the vector points at with origin 0,0\n */\nexport function pointFromVector<P extends GlobalPoint | LocalPoint>(\n  v: Vector,\n  offset: P = pointFrom(0, 0),\n): P {\n  return pointFrom<P>(offset[0] + v[0], offset[1] + v[1]);\n}\n\n/**\n * Checks if the provided value has the shape of a Point.\n *\n * @param p The value to attempt verification on\n * @returns TRUE if the provided value has the shape of a local or global point\n */\nexport function isPoint(p: unknown): p is LocalPoint | GlobalPoint {\n  return (\n    Array.isArray(p) &&\n    p.length === 2 &&\n    typeof p[0] === \"number\" &&\n    !isNaN(p[0]) &&\n    typeof p[1] === \"number\" &&\n    !isNaN(p[1])\n  );\n}\n\n/**\n * Compare two points coordinate-by-coordinate and if\n * they are closer than INVERSE_PRECISION it returns TRUE.\n *\n * @param a Point The first point to compare\n * @param b Point The second point to compare\n * @returns TRUE if the points are sufficiently close to each other\n */\nexport function pointsEqual<Point extends GlobalPoint | LocalPoint>(\n  a: Point,\n  b: Point,\n): boolean {\n  const abs = Math.abs;\n  return abs(a[0] - b[0]) < PRECISION && abs(a[1] - b[1]) < PRECISION;\n}\n\n/**\n * Rotate a point by [angle] radians.\n *\n * @param point The point to rotate\n * @param center The point to rotate around, the center point\n * @param angle The radians to rotate the point by\n * @returns The rotated point\n */\nexport function pointRotateRads<Point extends GlobalPoint | LocalPoint>(\n  [x, y]: Point,\n  [cx, cy]: Point,\n  angle: Radians,\n): Point {\n  return pointFrom(\n    (x - cx) * Math.cos(angle) - (y - cy) * Math.sin(angle) + cx,\n    (x - cx) * Math.sin(angle) + (y - cy) * Math.cos(angle) + cy,\n  );\n}\n\n/**\n * Rotate a point by [angle] degree.\n *\n * @param point The point to rotate\n * @param center The point to rotate around, the center point\n * @param angle The degree to rotate the point by\n * @returns The rotated point\n */\nexport function pointRotateDegs<Point extends GlobalPoint | LocalPoint>(\n  point: Point,\n  center: Point,\n  angle: Degrees,\n): Point {\n  return pointRotateRads(point, center, degreesToRadians(angle));\n}\n\n/**\n * Translate a point by a vector.\n *\n * WARNING: This is not for translating Excalidraw element points!\n *          You need to account for rotation on base coordinates\n *          on your own.\n *          CONSIDER USING AN APPROPRIATE ELEMENT-AWARE TRANSLATE!\n *\n * @param p The point to apply the translation on\n * @param v The vector to translate by\n * @returns\n */\n// TODO 99% of use is translating between global and local coords, which need to be formalized\nexport function pointTranslate<\n  From extends GlobalPoint | LocalPoint,\n  To extends GlobalPoint | LocalPoint,\n>(p: From, v: Vector = [0, 0] as Vector): To {\n  return pointFrom(p[0] + v[0], p[1] + v[1]);\n}\n\n/**\n * Find the center point at equal distance from both points.\n *\n * @param a One of the points to create the middle point for\n * @param b The other point to create the middle point for\n * @returns The middle point\n */\nexport function pointCenter<P extends LocalPoint | GlobalPoint>(a: P, b: P): P {\n  return pointFrom((a[0] + b[0]) / 2, (a[1] + b[1]) / 2);\n}\n\n/**\n * Calculate the distance between two points.\n *\n * @param a First point\n * @param b Second point\n * @returns The euclidean distance between the two points.\n */\nexport function pointDistance<P extends LocalPoint | GlobalPoint>(\n  a: P,\n  b: P,\n): number {\n  return Math.hypot(b[0] - a[0], b[1] - a[1]);\n}\n\n/**\n * Calculate the squared distance between two points.\n *\n * Note: Use this if you only compare distances, it saves a square root.\n *\n * @param a First point\n * @param b Second point\n * @returns The euclidean distance between the two points.\n */\nexport function pointDistanceSq<P extends LocalPoint | GlobalPoint>(\n  a: P,\n  b: P,\n): number {\n  const xDiff = b[0] - a[0];\n  const yDiff = b[1] - a[1];\n\n  return xDiff * xDiff + yDiff * yDiff;\n}\n\n/**\n * Scale a point from a given origin by the multiplier.\n *\n * @param p The point to scale\n * @param mid The origin to scale from\n * @param multiplier The scaling factor\n * @returns\n */\nexport const pointScaleFromOrigin = <P extends GlobalPoint | LocalPoint>(\n  p: P,\n  mid: P,\n  multiplier: number,\n) => pointTranslate(mid, vectorScale(vectorFromPoint(p, mid), multiplier));\n\n/**\n * Returns whether `q` lies inside the segment/rectangle defined by `p` and `r`.\n * This is an approximation to \"does `q` lie on a segment `pr`\" check.\n *\n * @param p The first point to compare against\n * @param q The actual point this function checks whether is in between\n * @param r The other point to compare against\n * @returns TRUE if q is indeed between p and r\n */\nexport const isPointWithinBounds = <P extends GlobalPoint | LocalPoint>(\n  p: P,\n  q: P,\n  r: P,\n) => {\n  return (\n    q[0] <= Math.max(p[0], r[0]) &&\n    q[0] >= Math.min(p[0], r[0]) &&\n    q[1] <= Math.max(p[1], r[1]) &&\n    q[1] >= Math.min(p[1], r[1])\n  );\n};\n", "import type { GlobalPoint, LocalPoint, Vector } from \"./types\";\n\n/**\n * Create a vector from the x and y coordiante elements.\n *\n * @param x The X aspect of the vector\n * @param y T Y aspect of the vector\n * @returns The constructed vector with X and Y as the coordinates\n */\nexport function vector(\n  x: number,\n  y: number,\n  originX: number = 0,\n  originY: number = 0,\n): Vector {\n  return [x - originX, y - originY] as Vector;\n}\n\n/**\n * Turn a point into a vector with the origin point.\n *\n * @param p The point to turn into a vector\n * @param origin The origin point in a given coordiante system\n * @returns The created vector from the point and the origin\n */\nexport function vectorFromPoint<Point extends GlobalPoint | LocalPoint>(\n  p: Point,\n  origin: Point = [0, 0] as Point,\n): Vector {\n  return vector(p[0] - origin[0], p[1] - origin[1]);\n}\n\n/**\n * Cross product is a binary operation on two vectors in 2D space.\n * It results in a vector that is perpendicular to both vectors.\n *\n * @param a One of the vectors to use for the directed area calculation\n * @param b The other vector to use for the directed area calculation\n * @returns The directed area value for the two vectos\n */\nexport function vectorCross(a: Vector, b: Vector): number {\n  return a[0] * b[1] - b[0] * a[1];\n}\n\n/**\n * Dot product is defined as the sum of the products of the\n * two vectors.\n *\n * @param a One of the vectors for which the sum of products is calculated\n * @param b The other vector for which the sum of products is calculated\n * @returns The sum of products of the two vectors\n */\nexport function vectorDot(a: Vector, b: Vector) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n\n/**\n * Determines if the value has the shape of a Vector.\n *\n * @param v The value to test\n * @returns TRUE if the value has the shape and components of a Vectors\n */\nexport function isVector(v: unknown): v is Vector {\n  return (\n    Array.isArray(v) &&\n    v.length === 2 &&\n    typeof v[0] === \"number\" &&\n    !isNaN(v[0]) &&\n    typeof v[1] === \"number\" &&\n    !isNaN(v[1])\n  );\n}\n\n/**\n * Add two vectors by adding their coordinates.\n *\n * @param a One of the vectors to add\n * @param b The other vector to add\n * @returns The sum vector of the two provided vectors\n */\nexport function vectorAdd(a: Readonly<Vector>, b: Readonly<Vector>): Vector {\n  return [a[0] + b[0], a[1] + b[1]] as Vector;\n}\n\n/**\n * Add two vectors by adding their coordinates.\n *\n * @param start One of the vectors to add\n * @param end The other vector to add\n * @returns The sum vector of the two provided vectors\n */\nexport function vectorSubtract(\n  start: Readonly<Vector>,\n  end: Readonly<Vector>,\n): Vector {\n  return [start[0] - end[0], start[1] - end[1]] as Vector;\n}\n\n/**\n * Scale vector by a scalar.\n *\n * @param v The vector to scale\n * @param scalar The scalar to multiply the vector components with\n * @returns The new scaled vector\n */\nexport function vectorScale(v: Vector, scalar: number): Vector {\n  return vector(v[0] * scalar, v[1] * scalar);\n}\n\n/**\n * Calculates the sqare magnitude of a vector. Use this if you compare\n * magnitudes as it saves you an SQRT.\n *\n * @param v The vector to measure\n * @returns The scalar squared magnitude of the vector\n */\nexport function vectorMagnitudeSq(v: Vector) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\n/**\n * Calculates the magnitude of a vector.\n *\n * @param v The vector to measure\n * @returns The scalar magnitude of the vector\n */\nexport function vectorMagnitude(v: Vector) {\n  return Math.sqrt(vectorMagnitudeSq(v));\n}\n\n/**\n * Normalize the vector (i.e. make the vector magnitue equal 1).\n *\n * @param v The vector to normalize\n * @returns The new normalized vector\n */\nexport const vectorNormalize = (v: Vector): Vector => {\n  const m = vectorMagnitude(v);\n\n  if (m === 0) {\n    return vector(0, 0);\n  }\n\n  return vector(v[0] / m, v[1] / m);\n};\n", "import { pointFrom } from \"./point\";\nimport { lineSegment, lineSegmentIntersectionPoints } from \"./segment\";\n\nimport type { GlobalPoint, LineSegment, LocalPoint, Rectangle } from \"./types\";\n\nexport function rectangle<P extends GlobalPoint | LocalPoint>(\n  topLeft: P,\n  bottomRight: P,\n): Rectangle<P> {\n  return [topLeft, bottomRight] as Rectangle<P>;\n}\n\nexport function rectangleIntersectLineSegment<\n  Point extends LocalPoint | GlobalPoint,\n>(r: Rectangle<Point>, l: LineSegment<Point>): Point[] {\n  return [\n    lineSegment(r[0], pointFrom(r[1][0], r[0][1])),\n    lineSegment(pointFrom(r[1][0], r[0][1]), r[1]),\n    lineSegment(r[1], pointFrom(r[0][0], r[1][1])),\n    lineSegment(pointFrom(r[0][0], r[1][1]), r[0]),\n  ]\n    .map((s) => lineSegmentIntersectionPoints(l, s))\n    .filter((i): i is Point => !!i);\n}\n", "import { line, linesIntersectAt } from \"./line\";\nimport {\n  isPoint,\n  pointCenter,\n  pointFromVector,\n  pointRotateRads,\n} from \"./point\";\nimport { PRECISION } from \"./utils\";\nimport {\n  vectorAdd,\n  vectorCross,\n  vectorFromPoint,\n  vectorScale,\n  vectorSubtract,\n} from \"./vector\";\n\nimport type { GlobalPoint, LineSegment, LocalPoint, Radians } from \"./types\";\n\n/**\n * Create a line segment from two points.\n *\n * @param points The two points delimiting the line segment on each end\n * @returns The line segment delineated by the points\n */\nexport function lineSegment<P extends GlobalPoint | LocalPoint>(\n  a: P,\n  b: P,\n): LineSegment<P> {\n  return [a, b] as LineSegment<P>;\n}\n\n/**\n *\n * @param segment\n * @returns\n */\nexport const isLineSegment = <Point extends GlobalPoint | LocalPoint>(\n  segment: unknown,\n): segment is LineSegment<Point> =>\n  Array.isArray(segment) &&\n  segment.length === 2 &&\n  isPoint(segment[0]) &&\n  isPoint(segment[0]);\n\n/**\n * Return the coordinates resulting from rotating the given line about an origin by an angle in radians\n * note that when the origin is not given, the midpoint of the given line is used as the origin.\n *\n * @param l\n * @param angle\n * @param origin\n * @returns\n */\nexport const lineSegmentRotate = <Point extends LocalPoint | GlobalPoint>(\n  l: LineSegment<Point>,\n  angle: Radians,\n  origin?: Point,\n): LineSegment<Point> => {\n  return lineSegment(\n    pointRotateRads(l[0], origin || pointCenter(l[0], l[1]), angle),\n    pointRotateRads(l[1], origin || pointCenter(l[0], l[1]), angle),\n  );\n};\n\n/**\n * Calculates the point two line segments with a definite start and end point\n * intersect at.\n */\nexport const segmentsIntersectAt = <Point extends GlobalPoint | LocalPoint>(\n  a: Readonly<LineSegment<Point>>,\n  b: Readonly<LineSegment<Point>>,\n): Point | null => {\n  const a0 = vectorFromPoint(a[0]);\n  const a1 = vectorFromPoint(a[1]);\n  const b0 = vectorFromPoint(b[0]);\n  const b1 = vectorFromPoint(b[1]);\n  const r = vectorSubtract(a1, a0);\n  const s = vectorSubtract(b1, b0);\n  const denominator = vectorCross(r, s);\n\n  if (denominator === 0) {\n    return null;\n  }\n\n  const i = vectorSubtract(vectorFromPoint(b[0]), vectorFromPoint(a[0]));\n  const u = vectorCross(i, r) / denominator;\n  const t = vectorCross(i, s) / denominator;\n\n  if (u === 0) {\n    return null;\n  }\n\n  const p = vectorAdd(a0, vectorScale(r, t));\n\n  if (t >= 0 && t < 1 && u >= 0 && u < 1) {\n    return pointFromVector<Point>(p);\n  }\n\n  return null;\n};\n\nexport const pointOnLineSegment = <Point extends LocalPoint | GlobalPoint>(\n  point: Point,\n  line: LineSegment<Point>,\n  threshold = PRECISION,\n) => {\n  const distance = distanceToLineSegment(point, line);\n\n  if (distance === 0) {\n    return true;\n  }\n\n  return distance < threshold;\n};\n\nexport const distanceToLineSegment = <Point extends LocalPoint | GlobalPoint>(\n  point: Point,\n  line: LineSegment<Point>,\n) => {\n  const [x, y] = point;\n  const [[x1, y1], [x2, y2]] = line;\n\n  const A = x - x1;\n  const B = y - y1;\n  const C = x2 - x1;\n  const D = y2 - y1;\n\n  const dot = A * C + B * D;\n  const len_sq = C * C + D * D;\n  let param = -1;\n  if (len_sq !== 0) {\n    param = dot / len_sq;\n  }\n\n  let xx;\n  let yy;\n\n  if (param < 0) {\n    xx = x1;\n    yy = y1;\n  } else if (param > 1) {\n    xx = x2;\n    yy = y2;\n  } else {\n    xx = x1 + param * C;\n    yy = y1 + param * D;\n  }\n\n  const dx = x - xx;\n  const dy = y - yy;\n  return Math.sqrt(dx * dx + dy * dy);\n};\n\n/**\n * Returns the intersection point of a segment and a line\n *\n * @param l\n * @param s\n * @returns\n */\nexport function lineSegmentIntersectionPoints<\n  Point extends GlobalPoint | LocalPoint,\n>(l: LineSegment<Point>, s: LineSegment<Point>): Point | null {\n  const candidate = linesIntersectAt(line(l[0], l[1]), line(s[0], s[1]));\n\n  if (\n    !candidate ||\n    !pointOnLineSegment(candidate, s) ||\n    !pointOnLineSegment(candidate, l)\n  ) {\n    return null;\n  }\n\n  return candidate;\n}\n", "import { pointFrom } from \"./point\";\n\nimport type { GlobalPoint, Line, LocalPoint } from \"./types\";\n\n/**\n * Create a line from two points.\n *\n * @param points The two points lying on the line\n * @returns The line on which the points lie\n */\nexport function line<P extends GlobalPoint | LocalPoint>(a: P, b: P): Line<P> {\n  return [a, b] as Line<P>;\n}\n\n/**\n * Determines the intersection point (unless the lines are parallel) of two\n * lines\n *\n * @param a\n * @param b\n * @returns\n */\nexport function linesIntersectAt<Point extends GlobalPoint | LocalPoint>(\n  a: Line<Point>,\n  b: Line<Point>,\n): Point | null {\n  const A1 = a[1][1] - a[0][1];\n  const B1 = a[0][0] - a[1][0];\n  const A2 = b[1][1] - b[0][1];\n  const B2 = b[0][0] - b[1][0];\n  const D = A1 * B2 - A2 * B1;\n  if (D !== 0) {\n    const C1 = A1 * a[0][0] + B1 * a[0][1];\n    const C2 = A2 * b[0][0] + B2 * b[0][1];\n    return pointFrom<Point>((C1 * B2 - C2 * B1) / D, (A1 * C2 - A2 * C1) / D);\n  }\n\n  return null;\n}\n", "import { pointsEqual } from \"./point\";\nimport { lineSegment, pointOnLineSegment } from \"./segment\";\nimport { PRECISION } from \"./utils\";\n\nimport type { GlobalPoint, LocalPoint, Polygon } from \"./types\";\n\nexport function polygon<Point extends GlobalPoint | LocalPoint>(\n  ...points: Point[]\n) {\n  return polygonClose(points) as Polygon<Point>;\n}\n\nexport function polygonFromPoints<Point extends GlobalPoint | LocalPoint>(\n  points: Point[],\n) {\n  return polygonClose(points) as Polygon<Point>;\n}\n\nexport const polygonIncludesPoint = <Point extends LocalPoint | GlobalPoint>(\n  point: Point,\n  polygon: Polygon<Point>,\n) => {\n  const x = point[0];\n  const y = point[1];\n  let inside = false;\n\n  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n    const xi = polygon[i][0];\n    const yi = polygon[i][1];\n    const xj = polygon[j][0];\n    const yj = polygon[j][1];\n\n    if (\n      ((yi > y && yj <= y) || (yi <= y && yj > y)) &&\n      x < ((xj - xi) * (y - yi)) / (yj - yi) + xi\n    ) {\n      inside = !inside;\n    }\n  }\n\n  return inside;\n};\n\nexport const pointOnPolygon = <Point extends LocalPoint | GlobalPoint>(\n  p: Point,\n  poly: Polygon<Point>,\n  threshold = PRECISION,\n) => {\n  let on = false;\n\n  for (let i = 0, l = poly.length - 1; i < l; i++) {\n    if (pointOnLineSegment(p, lineSegment(poly[i], poly[i + 1]), threshold)) {\n      on = true;\n      break;\n    }\n  }\n\n  return on;\n};\n\nfunction polygonClose<Point extends LocalPoint | GlobalPoint>(\n  polygon: Point[],\n) {\n  return polygonIsClosed(polygon)\n    ? polygon\n    : ([...polygon, polygon[0]] as Polygon<Point>);\n}\n\nfunction polygonIsClosed<Point extends LocalPoint | GlobalPoint>(\n  polygon: Point[],\n) {\n  return pointsEqual(polygon[0], polygon[polygon.length - 1]);\n}\n", "import { toBrandedType } from \"@excalidraw/common\";\n\nimport type { InclusiveRange } from \"./types\";\n\n/**\n * Create an inclusive range from the two numbers provided.\n *\n * @param start Start of the range\n * @param end End of the range\n * @returns\n */\nexport function rangeInclusive(start: number, end: number): InclusiveRange {\n  return toBrandedType<InclusiveRange>([start, end]);\n}\n\n/**\n * Turn a number pair into an inclusive range.\n *\n * @param pair The number pair to convert to an inclusive range\n * @returns The new inclusive range\n */\nexport function rangeInclusiveFromPair(pair: [start: number, end: number]) {\n  return toBrandedType<InclusiveRange>(pair);\n}\n\n/**\n * Given two ranges, return if the two ranges overlap with each other e.g.\n * [1, 3] overlaps with [2, 4] while [1, 3] does not overlap with [4, 5].\n *\n * @param param0 One of the ranges to compare\n * @param param1 The other range to compare against\n * @returns TRUE if the ranges overlap\n */\nexport const rangesOverlap = (\n  [a0, a1]: InclusiveRange,\n  [b0, b1]: InclusiveRange,\n): boolean => {\n  if (a0 <= b0) {\n    return a1 >= b0;\n  }\n\n  if (a0 >= b0) {\n    return b1 >= a0;\n  }\n\n  return false;\n};\n\n/**\n * Given two ranges,return ther intersection of the two ranges if any e.g. the\n * intersection of [1, 3] and [2, 4] is [2, 3].\n *\n * @param param0 The first range to compare\n * @param param1 The second range to compare\n * @returns The inclusive range intersection or NULL if no intersection\n */\nexport const rangeIntersection = (\n  [a0, a1]: InclusiveRange,\n  [b0, b1]: InclusiveRange,\n): InclusiveRange | null => {\n  const rangeStart = Math.max(a0, b0);\n  const rangeEnd = Math.min(a1, b1);\n\n  if (rangeStart <= rangeEnd) {\n    return toBrandedType<InclusiveRange>([rangeStart, rangeEnd]);\n  }\n\n  return null;\n};\n\n/**\n * Determine if a value is inside a range.\n *\n * @param value The value to check\n * @param range The range\n * @returns\n */\nexport const rangeIncludesValue = (\n  value: number,\n  [min, max]: InclusiveRange,\n): boolean => {\n  return value >= min && value <= max;\n};\n", "import type { GlobalPoint, LocalPoint, Triangle } from \"./types\";\n\n// Types\n\n/**\n * Tests if a point lies inside a triangle. This function\n * will return FALSE if the point lies exactly on the sides\n * of the triangle.\n *\n * @param triangle The triangle to test the point for\n * @param p The point to test whether is in the triangle\n * @returns TRUE if the point is inside of the triangle\n */\nexport function triangleIncludesPoint<P extends GlobalPoint | LocalPoint>(\n  [a, b, c]: Triangle<P>,\n  p: P,\n): boolean {\n  const triangleSign = (p1: P, p2: P, p3: P) =>\n    (p1[0] - p3[0]) * (p2[1] - p3[1]) - (p2[0] - p3[0]) * (p1[1] - p3[1]);\n  const d1 = triangleSign(p, a, b);\n  const d2 = triangleSign(p, b, c);\n  const d3 = triangleSign(p, c, a);\n\n  const has_neg = d1 < 0 || d2 < 0 || d3 < 0;\n  const has_pos = d1 > 0 || d2 > 0 || d3 > 0;\n\n  return !(has_neg && has_pos);\n}\n", "//\n// Measurements\n//\n\n/**\n * By definition one radian is the angle subtended at the centre\n * of a circle by an arc that is equal in length to the radius.\n */\nexport type Radians = number & { _brand: \"excalimath__radian\" };\n\n/**\n * An angle measurement of a plane angle in which one full\n * rotation is 360 degrees.\n */\nexport type Degrees = number & { _brand: \"excalimath_degree\" };\n\n//\n// Range\n//\n\n/**\n * A number range which includes the start and end numbers in the range.\n */\nexport type InclusiveRange = [number, number] & { _brand: \"excalimath_degree\" };\n\n//\n// Point\n//\n\n/**\n * Represents a 2D position in world or canvas space. A\n * global coordinate.\n */\nexport type GlobalPoint = [x: number, y: number] & {\n  _brand: \"excalimath__globalpoint\";\n};\n\n/**\n * Represents a 2D position in whatever local space it's\n * needed. A local coordinate.\n */\nexport type LocalPoint = [x: number, y: number] & {\n  _brand: \"excalimath__localpoint\";\n};\n\n// Line\n\n/**\n * A line is an infinitely long object with no width, depth, or curvature.\n */\nexport type Line<P extends GlobalPoint | LocalPoint> = [p: P, q: P] & {\n  _brand: \"excalimath_line\";\n};\n\n/**\n * In geometry, a line segment is a part of a straight\n * line that is bounded by two distinct end points, and\n * contains every point on the line that is between its endpoints.\n */\nexport type LineSegment<P extends GlobalPoint | LocalPoint> = [a: P, b: P] & {\n  _brand: \"excalimath_linesegment\";\n};\n\n//\n// Vector\n//\n\n/**\n * Represents a 2D vector\n */\nexport type Vector = [u: number, v: number] & {\n  _brand: \"excalimath__vector\";\n};\n\n// Triangles\n\n/**\n * A triangle represented by 3 points\n */\nexport type Triangle<P extends GlobalPoint | LocalPoint> = [\n  a: P,\n  b: P,\n  c: P,\n] & {\n  _brand: \"excalimath__triangle\";\n};\n\n/**\n * A rectangular shape represented by 4 points at its corners\n */\nexport type Rectangle<P extends GlobalPoint | LocalPoint> = [a: P, b: P] & {\n  _brand: \"excalimath__rectangle\";\n};\n\n//\n// Polygon\n//\n\n/**\n * A polygon is a closed shape by connecting the given points\n * rectangles and diamonds are modelled by polygons\n */\nexport type Polygon<Point extends GlobalPoint | LocalPoint> = Point[] & {\n  _brand: \"excalimath_polygon\";\n};\n\n//\n// Curve\n//\n\n/**\n * Cubic bezier curve with four control points\n */\nexport type Curve<Point extends GlobalPoint | LocalPoint> = [\n  Point,\n  Point,\n  Point,\n  Point,\n] & {\n  _brand: \"excalimath_curve\";\n};\n\nexport type PolarCoords = [\n  radius: number,\n  /** angle in radians */\n  angle: number,\n];\n\n/**\n  An ellipse is specified by its center, angle, and its major and minor axes\n  but for the sake of simplicity, we've used halfWidth and halfHeight instead\n  in replace of semi major and semi minor axes\n */\nexport type Ellipse<Point extends GlobalPoint | LocalPoint> = {\n  center: Point;\n  halfWidth: number;\n  halfHeight: number;\n} & {\n  _brand: \"excalimath_ellipse\";\n};\n", "import Pool from \"es6-promise-pool\";\n\n// extending the missing types\n// relying on the [Index, T] to keep a correct order\ntype TPromisePool<T, Index = number> = Pool<[Index, T][]> & {\n  addEventListener: (\n    type: \"fulfilled\",\n    listener: (event: { data: { result: [Index, T] } }) => void,\n  ) => (event: { data: { result: [Index, T] } }) => void;\n  removeEventListener: (\n    type: \"fulfilled\",\n    listener: (event: { data: { result: [Index, T] } }) => void,\n  ) => void;\n};\n\nexport class PromisePool<T> {\n  private readonly pool: TPromisePool<T>;\n  private readonly entries: Record<number, T> = {};\n\n  constructor(\n    source: IterableIterator<Promise<void | readonly [number, T]>>,\n    concurrency: number,\n  ) {\n    this.pool = new Pool(\n      source as unknown as () => void | PromiseLike<[number, T][]>,\n      concurrency,\n    ) as TPromisePool<T>;\n  }\n\n  public all() {\n    const listener = (event: { data: { result: void | [number, T] } }) => {\n      if (event.data.result) {\n        // by default pool does not return the results, so we are gathering them manually\n        // with the correct call order (represented by the index in the tuple)\n        const [index, value] = event.data.result;\n        this.entries[index] = value;\n      }\n    };\n\n    this.pool.addEventListener(\"fulfilled\", listener);\n\n    return this.pool.start().then(() => {\n      setTimeout(() => {\n        this.pool.removeEventListener(\"fulfilled\", listener);\n      });\n\n      return Object.values(this.entries);\n    });\n  }\n}\n", "import { nanoid } from \"nanoid\";\nimport { Random } from \"roughjs/bin/math\";\n\nimport { isTestEnv } from \"./utils\";\n\nlet random = new Random(Date.now());\nlet testIdBase = 0;\n\nexport const randomInteger = () => Math.floor(random.next() * 2 ** 31);\n\nexport const reseed = (seed: number) => {\n  random = new Random(seed);\n  testIdBase = 0;\n};\n\nexport const randomId = () => (isTestEnv() ? `id${testIdBase++}` : nanoid());\n", "// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nimport { urlAlphabet } from './url-alphabet/index.js'\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step | 0\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\n\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\n\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    byte &= 63\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n", "// This alphabet uses `A-Za-z0-9_-` symbols.\n// The order of characters is optimized for better gzip and brotli compression.\n// Same as in non-secure/index.js\nlet urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n\nexport { urlAlphabet }\n", "export function randomSeed() {\n    return Math.floor(Math.random() * 2 ** 31);\n}\nexport class Random {\n    constructor(seed) {\n        this.seed = seed;\n    }\n    next() {\n        if (this.seed) {\n            return ((2 ** 31 - 1) & (this.seed = Math.imul(48271, this.seed))) / 2 ** 31;\n        }\n        else {\n            return Math.random();\n        }\n    }\n}\n", "import { average } from \"@excalidraw/math\";\n\nimport type {\n  ExcalidrawBindableElement,\n  FontFamilyValues,\n  FontString,\n} from \"@excalidraw/element/types\";\n\nimport type {\n  ActiveTool,\n  AppState,\n  ToolType,\n  UnsubscribeCallback,\n  Zoom,\n} from \"@excalidraw/excalidraw/types\";\n\nimport { COLOR_PALETTE } from \"./colors\";\nimport {\n  DEFAULT_VERSION,\n  ENV,\n  FONT_FAMILY,\n  getFontFamilyFallbacks,\n  isDarwin,\n  WINDOWS_EMOJI_FALLBACK_FONT,\n} from \"./constants\";\n\nimport type { MaybePromise, ResolutionType } from \"./utility-types\";\n\nimport type { EVENT } from \"./constants\";\n\nlet mockDateTime: string | null = null;\n\nexport const setDateTimeForTests = (dateTime: string) => {\n  mockDateTime = dateTime;\n};\n\nexport const getDateTime = () => {\n  if (mockDateTime) {\n    return mockDateTime;\n  }\n\n  const date = new Date();\n  const year = date.getFullYear();\n  const month = `${date.getMonth() + 1}`.padStart(2, \"0\");\n  const day = `${date.getDate()}`.padStart(2, \"0\");\n  const hr = `${date.getHours()}`.padStart(2, \"0\");\n  const min = `${date.getMinutes()}`.padStart(2, \"0\");\n\n  return `${year}-${month}-${day}-${hr}${min}`;\n};\n\nexport const capitalizeString = (str: string) =>\n  str.charAt(0).toUpperCase() + str.slice(1);\n\nexport const isToolIcon = (\n  target: Element | EventTarget | null,\n): target is HTMLElement =>\n  target instanceof HTMLElement && target.className.includes(\"ToolIcon\");\n\nexport const isInputLike = (\n  target: Element | EventTarget | null,\n): target is\n  | HTMLInputElement\n  | HTMLTextAreaElement\n  | HTMLSelectElement\n  | HTMLBRElement\n  | HTMLDivElement =>\n  (target instanceof HTMLElement && target.dataset.type === \"wysiwyg\") ||\n  target instanceof HTMLBRElement || // newline in wysiwyg\n  target instanceof HTMLInputElement ||\n  target instanceof HTMLTextAreaElement ||\n  target instanceof HTMLSelectElement;\n\nexport const isInteractive = (target: Element | EventTarget | null) => {\n  return (\n    isInputLike(target) ||\n    (target instanceof Element && !!target.closest(\"label, button\"))\n  );\n};\n\nexport const isWritableElement = (\n  target: Element | EventTarget | null,\n): target is\n  | HTMLInputElement\n  | HTMLTextAreaElement\n  | HTMLBRElement\n  | HTMLDivElement =>\n  (target instanceof HTMLElement && target.dataset.type === \"wysiwyg\") ||\n  target instanceof HTMLBRElement || // newline in wysiwyg\n  target instanceof HTMLTextAreaElement ||\n  (target instanceof HTMLInputElement &&\n    (target.type === \"text\" ||\n      target.type === \"number\" ||\n      target.type === \"password\"));\n\nexport const getFontFamilyString = ({\n  fontFamily,\n}: {\n  fontFamily: FontFamilyValues;\n}) => {\n  for (const [fontFamilyString, id] of Object.entries(FONT_FAMILY)) {\n    if (id === fontFamily) {\n      // TODO: we should fallback first to generic family names first\n      return `${fontFamilyString}${getFontFamilyFallbacks(id)\n        .map((x) => `, ${x}`)\n        .join(\"\")}`;\n    }\n  }\n  return WINDOWS_EMOJI_FALLBACK_FONT;\n};\n\n/** returns fontSize+fontFamily string for assignment to DOM elements */\nexport const getFontString = ({\n  fontSize,\n  fontFamily,\n}: {\n  fontSize: number;\n  fontFamily: FontFamilyValues;\n}) => {\n  return `${fontSize}px ${getFontFamilyString({ fontFamily })}` as FontString;\n};\n\nexport const debounce = <T extends any[]>(\n  fn: (...args: T) => void,\n  timeout: number,\n) => {\n  let handle = 0;\n  let lastArgs: T | null = null;\n  const ret = (...args: T) => {\n    lastArgs = args;\n    clearTimeout(handle);\n    handle = window.setTimeout(() => {\n      lastArgs = null;\n      fn(...args);\n    }, timeout);\n  };\n  ret.flush = () => {\n    clearTimeout(handle);\n    if (lastArgs) {\n      const _lastArgs = lastArgs;\n      lastArgs = null;\n      fn(..._lastArgs);\n    }\n  };\n  ret.cancel = () => {\n    lastArgs = null;\n    clearTimeout(handle);\n  };\n  return ret;\n};\n\n// throttle callback to execute once per animation frame\nexport const throttleRAF = <T extends any[]>(\n  fn: (...args: T) => void,\n  opts?: { trailing?: boolean },\n) => {\n  let timerId: number | null = null;\n  let lastArgs: T | null = null;\n  let lastArgsTrailing: T | null = null;\n\n  const scheduleFunc = (args: T) => {\n    timerId = window.requestAnimationFrame(() => {\n      timerId = null;\n      fn(...args);\n      lastArgs = null;\n      if (lastArgsTrailing) {\n        lastArgs = lastArgsTrailing;\n        lastArgsTrailing = null;\n        scheduleFunc(lastArgs);\n      }\n    });\n  };\n\n  const ret = (...args: T) => {\n    if (isTestEnv()) {\n      fn(...args);\n      return;\n    }\n    lastArgs = args;\n    if (timerId === null) {\n      scheduleFunc(lastArgs);\n    } else if (opts?.trailing) {\n      lastArgsTrailing = args;\n    }\n  };\n  ret.flush = () => {\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n    if (lastArgs) {\n      fn(...(lastArgsTrailing || lastArgs));\n      lastArgs = lastArgsTrailing = null;\n    }\n  };\n  ret.cancel = () => {\n    lastArgs = lastArgsTrailing = null;\n    if (timerId !== null) {\n      cancelAnimationFrame(timerId);\n      timerId = null;\n    }\n  };\n  return ret;\n};\n\n/**\n * Exponential ease-out method\n *\n * @param {number} k - The value to be tweened.\n * @returns {number} The tweened value.\n */\nexport const easeOut = (k: number) => {\n  return 1 - Math.pow(1 - k, 4);\n};\n\nconst easeOutInterpolate = (from: number, to: number, progress: number) => {\n  return (to - from) * easeOut(progress) + from;\n};\n\n/**\n * Animates values from `fromValues` to `toValues` using the requestAnimationFrame API.\n * Executes the `onStep` callback on each step with the interpolated values.\n * Returns a function that can be called to cancel the animation.\n *\n * @example\n * // Example usage:\n * const fromValues = { x: 0, y: 0 };\n * const toValues = { x: 100, y: 200 };\n * const onStep = ({x, y}) => {\n *   setState(x, y)\n * };\n * const onCancel = () => {\n *   console.log(\"Animation canceled\");\n * };\n *\n * const cancelAnimation = easeToValuesRAF({\n *   fromValues,\n *   toValues,\n *   onStep,\n *   onCancel,\n * });\n *\n * // To cancel the animation:\n * cancelAnimation();\n */\nexport const easeToValuesRAF = <\n  T extends Record<keyof T, number>,\n  K extends keyof T,\n>({\n  fromValues,\n  toValues,\n  onStep,\n  duration = 250,\n  interpolateValue,\n  onStart,\n  onEnd,\n  onCancel,\n}: {\n  fromValues: T;\n  toValues: T;\n  /**\n   * Interpolate a single value.\n   * Return undefined to be handled by the default interpolator.\n   */\n  interpolateValue?: (\n    fromValue: number,\n    toValue: number,\n    /** no easing applied  */\n    progress: number,\n    key: K,\n  ) => number | undefined;\n  onStep: (values: T) => void;\n  duration?: number;\n  onStart?: () => void;\n  onEnd?: () => void;\n  onCancel?: () => void;\n}) => {\n  let canceled = false;\n  let frameId = 0;\n  let startTime: number;\n\n  function step(timestamp: number) {\n    if (canceled) {\n      return;\n    }\n    if (startTime === undefined) {\n      startTime = timestamp;\n      onStart?.();\n    }\n\n    const elapsed = Math.min(timestamp - startTime, duration);\n    const factor = easeOut(elapsed / duration);\n\n    const newValues = {} as T;\n\n    Object.keys(fromValues).forEach((key) => {\n      const _key = key as keyof T;\n      const result = ((toValues[_key] - fromValues[_key]) * factor +\n        fromValues[_key]) as T[keyof T];\n      newValues[_key] = result;\n    });\n\n    onStep(newValues);\n\n    if (elapsed < duration) {\n      const progress = elapsed / duration;\n\n      const newValues = {} as T;\n\n      Object.keys(fromValues).forEach((key) => {\n        const _key = key as K;\n        const startValue = fromValues[_key];\n        const endValue = toValues[_key];\n\n        let result;\n\n        result = interpolateValue\n          ? interpolateValue(startValue, endValue, progress, _key)\n          : easeOutInterpolate(startValue, endValue, progress);\n\n        if (result == null) {\n          result = easeOutInterpolate(startValue, endValue, progress);\n        }\n\n        newValues[_key] = result as T[K];\n      });\n      onStep(newValues);\n\n      frameId = window.requestAnimationFrame(step);\n    } else {\n      onStep(toValues);\n      onEnd?.();\n    }\n  }\n\n  frameId = window.requestAnimationFrame(step);\n\n  return () => {\n    onCancel?.();\n    canceled = true;\n    window.cancelAnimationFrame(frameId);\n  };\n};\n\n// https://github.com/lodash/lodash/blob/es/chunk.js\nexport const chunk = <T extends any>(\n  array: readonly T[],\n  size: number,\n): T[][] => {\n  if (!array.length || size < 1) {\n    return [];\n  }\n  let index = 0;\n  let resIndex = 0;\n  const result = Array(Math.ceil(array.length / size));\n  while (index < array.length) {\n    result[resIndex++] = array.slice(index, (index += size));\n  }\n  return result;\n};\n\nexport const selectNode = (node: Element) => {\n  const selection = window.getSelection();\n  if (selection) {\n    const range = document.createRange();\n    range.selectNodeContents(node);\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n};\n\nexport const removeSelection = () => {\n  const selection = window.getSelection();\n  if (selection) {\n    selection.removeAllRanges();\n  }\n};\n\nexport const distance = (x: number, y: number) => Math.abs(x - y);\n\nexport const updateActiveTool = (\n  appState: Pick<AppState, \"activeTool\">,\n  data: ((\n    | {\n        type: ToolType;\n      }\n    | { type: \"custom\"; customType: string }\n  ) & { locked?: boolean }) & {\n    lastActiveToolBeforeEraser?: ActiveTool | null;\n  },\n): AppState[\"activeTool\"] => {\n  if (data.type === \"custom\") {\n    return {\n      ...appState.activeTool,\n      type: \"custom\",\n      customType: data.customType,\n      locked: data.locked ?? appState.activeTool.locked,\n    };\n  }\n\n  return {\n    ...appState.activeTool,\n    lastActiveTool:\n      data.lastActiveToolBeforeEraser === undefined\n        ? appState.activeTool.lastActiveTool\n        : data.lastActiveToolBeforeEraser,\n    type: data.type,\n    customType: null,\n    locked: data.locked ?? appState.activeTool.locked,\n  };\n};\n\nexport const isFullScreen = () =>\n  document.fullscreenElement?.nodeName === \"HTML\";\n\nexport const allowFullScreen = () =>\n  document.documentElement.requestFullscreen();\n\nexport const exitFullScreen = () => document.exitFullscreen();\n\nexport const getShortcutKey = (shortcut: string): string => {\n  shortcut = shortcut\n    .replace(/\\bAlt\\b/i, \"Alt\")\n    .replace(/\\bShift\\b/i, \"Shift\")\n    .replace(/\\b(Enter|Return)\\b/i, \"Enter\");\n  if (isDarwin) {\n    return shortcut\n      .replace(/\\bCtrlOrCmd\\b/gi, \"Cmd\")\n      .replace(/\\bAlt\\b/i, \"Option\");\n  }\n  return shortcut.replace(/\\bCtrlOrCmd\\b/gi, \"Ctrl\");\n};\n\nexport const viewportCoordsToSceneCoords = (\n  { clientX, clientY }: { clientX: number; clientY: number },\n  {\n    zoom,\n    offsetLeft,\n    offsetTop,\n    scrollX,\n    scrollY,\n  }: {\n    zoom: Zoom;\n    offsetLeft: number;\n    offsetTop: number;\n    scrollX: number;\n    scrollY: number;\n  },\n) => {\n  const x = (clientX - offsetLeft) / zoom.value - scrollX;\n  const y = (clientY - offsetTop) / zoom.value - scrollY;\n\n  return { x, y };\n};\n\nexport const sceneCoordsToViewportCoords = (\n  { sceneX, sceneY }: { sceneX: number; sceneY: number },\n  {\n    zoom,\n    offsetLeft,\n    offsetTop,\n    scrollX,\n    scrollY,\n  }: {\n    zoom: Zoom;\n    offsetLeft: number;\n    offsetTop: number;\n    scrollX: number;\n    scrollY: number;\n  },\n) => {\n  const x = (sceneX + scrollX) * zoom.value + offsetLeft;\n  const y = (sceneY + scrollY) * zoom.value + offsetTop;\n  return { x, y };\n};\n\nexport const getGlobalCSSVariable = (name: string) =>\n  getComputedStyle(document.documentElement).getPropertyValue(`--${name}`);\n\nconst RS_LTR_CHARS =\n  \"A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\" +\n  \"\\u2C00-\\uFB1C\\uFDFE-\\uFE6F\\uFEFD-\\uFFFF\";\nconst RS_RTL_CHARS = \"\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC\";\nconst RE_RTL_CHECK = new RegExp(`^[^${RS_LTR_CHARS}]*[${RS_RTL_CHARS}]`);\n/**\n * Checks whether first directional character is RTL. Meaning whether it starts\n *  with RTL characters, or indeterminate (numbers etc.) characters followed by\n *  RTL.\n * See https://github.com/excalidraw/excalidraw/pull/1722#discussion_r436340171\n */\nexport const isRTL = (text: string) => RE_RTL_CHECK.test(text);\n\nexport const tupleToCoors = (\n  xyTuple: readonly [number, number],\n): { x: number; y: number } => {\n  const [x, y] = xyTuple;\n  return { x, y };\n};\n\n/** use as a rejectionHandler to mute filesystem Abort errors */\nexport const muteFSAbortError = (error?: Error) => {\n  if (error?.name === \"AbortError\") {\n    console.warn(error);\n    return;\n  }\n  throw error;\n};\n\nexport const findIndex = <T>(\n  array: readonly T[],\n  cb: (element: T, index: number, array: readonly T[]) => boolean,\n  fromIndex: number = 0,\n) => {\n  if (fromIndex < 0) {\n    fromIndex = array.length + fromIndex;\n  }\n  fromIndex = Math.min(array.length, Math.max(fromIndex, 0));\n  let index = fromIndex - 1;\n  while (++index < array.length) {\n    if (cb(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n};\n\nexport const findLastIndex = <T>(\n  array: readonly T[],\n  cb: (element: T, index: number, array: readonly T[]) => boolean,\n  fromIndex: number = array.length - 1,\n) => {\n  if (fromIndex < 0) {\n    fromIndex = array.length + fromIndex;\n  }\n  fromIndex = Math.min(array.length - 1, Math.max(fromIndex, 0));\n  let index = fromIndex + 1;\n  while (--index > -1) {\n    if (cb(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n};\n\nexport const isTransparent = (color: string) => {\n  const isRGBTransparent = color.length === 5 && color.substr(4, 1) === \"0\";\n  const isRRGGBBTransparent = color.length === 9 && color.substr(7, 2) === \"00\";\n  return (\n    isRGBTransparent ||\n    isRRGGBBTransparent ||\n    color === COLOR_PALETTE.transparent\n  );\n};\n\nexport const isBindingFallthroughEnabled = (el: ExcalidrawBindableElement) =>\n  el.fillStyle !== \"solid\" || isTransparent(el.backgroundColor);\n\nexport type ResolvablePromise<T> = Promise<T> & {\n  resolve: [T] extends [undefined]\n    ? (value?: MaybePromise<Awaited<T>>) => void\n    : (value: MaybePromise<Awaited<T>>) => void;\n  reject: (error: Error) => void;\n};\nexport const resolvablePromise = <T>() => {\n  let resolve!: any;\n  let reject!: any;\n  const promise = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  (promise as any).resolve = resolve;\n  (promise as any).reject = reject;\n  return promise as ResolvablePromise<T>;\n};\n\n//https://stackoverflow.com/a/9462382/8418\nexport const nFormatter = (num: number, digits: number): string => {\n  const si = [\n    { value: 1, symbol: \"b\" },\n    { value: 1e3, symbol: \"k\" },\n    { value: 1e6, symbol: \"M\" },\n    { value: 1e9, symbol: \"G\" },\n  ];\n  const rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n  let index;\n  for (index = si.length - 1; index > 0; index--) {\n    if (num >= si[index].value) {\n      break;\n    }\n  }\n  return (\n    (num / si[index].value).toFixed(digits).replace(rx, \"$1\") + si[index].symbol\n  );\n};\n\nexport const getVersion = () => {\n  return (\n    document.querySelector<HTMLMetaElement>('meta[name=\"version\"]')?.content ||\n    DEFAULT_VERSION\n  );\n};\n\n// Adapted from https://github.com/Modernizr/Modernizr/blob/master/feature-detects/emoji.js\nexport const supportsEmoji = () => {\n  const canvas = document.createElement(\"canvas\");\n  const ctx = canvas.getContext(\"2d\");\n  if (!ctx) {\n    return false;\n  }\n  const offset = 12;\n  ctx.fillStyle = \"#f00\";\n  ctx.textBaseline = \"top\";\n  ctx.font = \"32px Arial\";\n  // Modernizr used \uD83D\uDC28, but it is sort of supported on Windows 7.\n  // Luckily \uD83D\uDE00 isn't supported.\n  ctx.fillText(\"\uD83D\uDE00\", 0, 0);\n  return ctx.getImageData(offset, offset, 1, 1).data[0] !== 0;\n};\n\nexport const getNearestScrollableContainer = (\n  element: HTMLElement,\n): HTMLElement | Document => {\n  let parent = element.parentElement;\n  while (parent) {\n    if (parent === document.body) {\n      return document;\n    }\n    const { overflowY } = window.getComputedStyle(parent);\n    const hasScrollableContent = parent.scrollHeight > parent.clientHeight;\n    if (\n      hasScrollableContent &&\n      (overflowY === \"auto\" ||\n        overflowY === \"scroll\" ||\n        overflowY === \"overlay\")\n    ) {\n      return parent;\n    }\n    parent = parent.parentElement;\n  }\n  return document;\n};\n\nexport const focusNearestParent = (element: HTMLInputElement) => {\n  let parent = element.parentElement;\n  while (parent) {\n    if (parent.tabIndex > -1) {\n      parent.focus();\n      return;\n    }\n    parent = parent.parentElement;\n  }\n};\n\nexport const preventUnload = (event: BeforeUnloadEvent) => {\n  event.preventDefault();\n  // NOTE: modern browsers no longer allow showing a custom message here\n  event.returnValue = \"\";\n};\n\nexport const bytesToHexString = (bytes: Uint8Array) => {\n  return Array.from(bytes)\n    .map((byte) => `0${byte.toString(16)}`.slice(-2))\n    .join(\"\");\n};\n\nexport const getUpdatedTimestamp = () => (isTestEnv() ? 1 : Date.now());\n\n/**\n * Transforms array of objects containing `id` attribute,\n * or array of ids (strings), into a Map, keyd by `id`.\n */\nexport const arrayToMap = <T extends { id: string } | string>(\n  items: readonly T[] | Map<string, T>,\n) => {\n  if (items instanceof Map) {\n    return items;\n  }\n  return items.reduce((acc: Map<string, T>, element) => {\n    acc.set(typeof element === \"string\" ? element : element.id, element);\n    return acc;\n  }, new Map());\n};\n\nexport const arrayToMapWithIndex = <T extends { id: string }>(\n  elements: readonly T[],\n) =>\n  elements.reduce((acc, element: T, idx) => {\n    acc.set(element.id, [element, idx]);\n    return acc;\n  }, new Map<string, [element: T, index: number]>());\n\n/**\n * Transform array into an object, use only when array order is irrelevant.\n */\nexport const arrayToObject = <T>(\n  array: readonly T[],\n  groupBy?: (value: T) => string | number,\n) =>\n  array.reduce((acc, value) => {\n    acc[groupBy ? groupBy(value) : String(value)] = value;\n    return acc;\n  }, {} as { [key: string]: T });\n\n/** Doubly linked node */\nexport type Node<T> = T & {\n  prev: Node<T> | null;\n  next: Node<T> | null;\n};\n\n/**\n * Creates a circular doubly linked list by adding `prev` and `next` props to the existing array nodes.\n */\nexport const arrayToList = <T>(array: readonly T[]): Node<T>[] =>\n  array.reduce((acc, curr, index) => {\n    const node: Node<T> = { ...curr, prev: null, next: null };\n\n    // no-op for first item, we don't want circular references on a single item\n    if (index !== 0) {\n      const prevNode = acc[index - 1];\n      node.prev = prevNode;\n      prevNode.next = node;\n\n      if (index === array.length - 1) {\n        // make the references circular and connect head & tail\n        const firstNode = acc[0];\n        node.next = firstNode;\n        firstNode.prev = node;\n      }\n    }\n\n    acc.push(node);\n\n    return acc;\n  }, [] as Node<T>[]);\n\nexport const isTestEnv = () => import.meta.env.MODE === ENV.TEST;\n\nexport const isDevEnv = () => import.meta.env.MODE === ENV.DEVELOPMENT;\n\nexport const isServerEnv = () =>\n  typeof process !== \"undefined\" && !!process?.env?.NODE_ENV;\n\nexport const wrapEvent = <T extends Event>(name: EVENT, nativeEvent: T) => {\n  return new CustomEvent(name, {\n    detail: {\n      nativeEvent,\n    },\n    cancelable: true,\n  });\n};\n\nexport const updateObject = <T extends Record<string, any>>(\n  obj: T,\n  updates: Partial<T>,\n): T => {\n  let didChange = false;\n  for (const key in updates) {\n    const value = (updates as any)[key];\n    if (typeof value !== \"undefined\") {\n      if (\n        (obj as any)[key] === value &&\n        // if object, always update because its attrs could have changed\n        (typeof value !== \"object\" || value === null)\n      ) {\n        continue;\n      }\n      didChange = true;\n    }\n  }\n\n  if (!didChange) {\n    return obj;\n  }\n\n  return {\n    ...obj,\n    ...updates,\n  };\n};\n\nexport const isPrimitive = (val: any) => {\n  const type = typeof val;\n  return val == null || (type !== \"object\" && type !== \"function\");\n};\n\nexport const getFrame = () => {\n  try {\n    return window.self === window.top ? \"top\" : \"iframe\";\n  } catch (error) {\n    return \"iframe\";\n  }\n};\n\nexport const isRunningInIframe = () => getFrame() === \"iframe\";\n\nexport const isPromiseLike = (\n  value: any,\n): value is Promise<ResolutionType<typeof value>> => {\n  return (\n    !!value &&\n    typeof value === \"object\" &&\n    \"then\" in value &&\n    \"catch\" in value &&\n    \"finally\" in value\n  );\n};\n\nexport const queryFocusableElements = (container: HTMLElement | null) => {\n  const focusableElements = container?.querySelectorAll<HTMLElement>(\n    \"button, a, input, select, textarea, div[tabindex], label[tabindex]\",\n  );\n\n  return focusableElements\n    ? Array.from(focusableElements).filter(\n        (element) =>\n          element.tabIndex > -1 && !(element as HTMLInputElement).disabled,\n      )\n    : [];\n};\n\n/** use as a fallback after identity check (for perf reasons) */\nconst _defaultIsShallowComparatorFallback = (a: any, b: any): boolean => {\n  // consider two empty arrays equal\n  if (\n    Array.isArray(a) &&\n    Array.isArray(b) &&\n    a.length === 0 &&\n    b.length === 0\n  ) {\n    return true;\n  }\n  return a === b;\n};\n\n/**\n * Returns whether object/array is shallow equal.\n * Considers empty object/arrays as equal (whether top-level or second-level).\n */\nexport const isShallowEqual = <\n  T extends Record<string, any>,\n  K extends readonly unknown[],\n>(\n  objA: T,\n  objB: T,\n  comparators?:\n    | { [key in keyof T]?: (a: T[key], b: T[key]) => boolean }\n    | (keyof T extends K[number]\n        ? K extends readonly (keyof T)[]\n          ? K\n          : {\n              _error: \"keys are either missing or include keys not in compared obj\";\n            }\n        : {\n            _error: \"keys are either missing or include keys not in compared obj\";\n          }),\n  debug = false,\n) => {\n  const aKeys = Object.keys(objA);\n  const bKeys = Object.keys(objB);\n  if (aKeys.length !== bKeys.length) {\n    if (debug) {\n      console.warn(\n        `%cisShallowEqual: objects don't have same properties ->`,\n        \"color: #8B4000\",\n        objA,\n        objB,\n      );\n    }\n    return false;\n  }\n\n  if (comparators && Array.isArray(comparators)) {\n    for (const key of comparators) {\n      const ret =\n        objA[key] === objB[key] ||\n        _defaultIsShallowComparatorFallback(objA[key], objB[key]);\n      if (!ret) {\n        if (debug) {\n          console.warn(\n            `%cisShallowEqual: ${key} not equal ->`,\n            \"color: #8B4000\",\n            objA[key],\n            objB[key],\n          );\n        }\n        return false;\n      }\n    }\n    return true;\n  }\n\n  return aKeys.every((key) => {\n    const comparator = (\n      comparators as { [key in keyof T]?: (a: T[key], b: T[key]) => boolean }\n    )?.[key as keyof T];\n    const ret = comparator\n      ? comparator(objA[key], objB[key])\n      : objA[key] === objB[key] ||\n        _defaultIsShallowComparatorFallback(objA[key], objB[key]);\n\n    if (!ret && debug) {\n      console.warn(\n        `%cisShallowEqual: ${key} not equal ->`,\n        \"color: #8B4000\",\n        objA[key],\n        objB[key],\n      );\n    }\n    return ret;\n  });\n};\n\n// taken from Radix UI\n// https://github.com/radix-ui/primitives/blob/main/packages/core/primitive/src/primitive.tsx\nexport const composeEventHandlers = <E>(\n  originalEventHandler?: (event: E) => void,\n  ourEventHandler?: (event: E) => void,\n  { checkForDefaultPrevented = true } = {},\n) => {\n  return function handleEvent(event: E) {\n    originalEventHandler?.(event);\n\n    if (\n      !checkForDefaultPrevented ||\n      !(event as unknown as Event)?.defaultPrevented\n    ) {\n      return ourEventHandler?.(event);\n    }\n  };\n};\n\n/**\n * supply `null` as message if non-never value is valid, you just need to\n * typecheck against it\n */\nexport const assertNever = (\n  value: never,\n  message: string | null,\n  softAssert?: boolean,\n): never => {\n  if (!message) {\n    return value;\n  }\n  if (softAssert) {\n    console.error(message);\n    return value;\n  }\n\n  throw new Error(message);\n};\n\nexport function invariant(condition: any, message: string): asserts condition {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\n/**\n * Memoizes on values of `opts` object (strict equality).\n */\nexport const memoize = <T extends Record<string, any>, R extends any>(\n  func: (opts: T) => R,\n) => {\n  let lastArgs: Map<string, any> | undefined;\n  let lastResult: R | undefined;\n\n  const ret = function (opts: T) {\n    const currentArgs = Object.entries(opts);\n\n    if (lastArgs) {\n      let argsAreEqual = true;\n      for (const [key, value] of currentArgs) {\n        if (lastArgs.get(key) !== value) {\n          argsAreEqual = false;\n          break;\n        }\n      }\n      if (argsAreEqual) {\n        return lastResult;\n      }\n    }\n\n    const result = func(opts);\n\n    lastArgs = new Map(currentArgs);\n    lastResult = result;\n\n    return result;\n  };\n\n  ret.clear = () => {\n    lastArgs = undefined;\n    lastResult = undefined;\n  };\n\n  return ret as typeof func & { clear: () => void };\n};\n\n/** Checks if value is inside given collection. Useful for type-safety. */\nexport const isMemberOf = <T extends string>(\n  /** Set/Map/Array/Object */\n  collection: Set<T> | readonly T[] | Record<T, any> | Map<T, any>,\n  /** value to look for */\n  value: string,\n): value is T => {\n  return collection instanceof Set || collection instanceof Map\n    ? collection.has(value as T)\n    : \"includes\" in collection\n    ? collection.includes(value as T)\n    : collection.hasOwnProperty(value);\n};\n\nexport const cloneJSON = <T>(obj: T): T => JSON.parse(JSON.stringify(obj));\n\nexport const updateStable = <T extends any[] | Record<string, any>>(\n  prevValue: T,\n  nextValue: T,\n) => {\n  if (isShallowEqual(prevValue, nextValue)) {\n    return prevValue;\n  }\n  return nextValue;\n};\n\n// Window\nexport function addEventListener<K extends keyof WindowEventMap>(\n  target: Window & typeof globalThis,\n  type: K,\n  listener: (this: Window, ev: WindowEventMap[K]) => any,\n  options?: boolean | AddEventListenerOptions,\n): UnsubscribeCallback;\nexport function addEventListener(\n  target: Window & typeof globalThis,\n  type: string,\n  listener: (this: Window, ev: Event) => any,\n  options?: boolean | AddEventListenerOptions,\n): UnsubscribeCallback;\n// Document\nexport function addEventListener<K extends keyof DocumentEventMap>(\n  target: Document,\n  type: K,\n  listener: (this: Document, ev: DocumentEventMap[K]) => any,\n  options?: boolean | AddEventListenerOptions,\n): UnsubscribeCallback;\nexport function addEventListener(\n  target: Document,\n  type: string,\n  listener: (this: Document, ev: Event) => any,\n  options?: boolean | AddEventListenerOptions,\n): UnsubscribeCallback;\n// FontFaceSet (document.fonts)\nexport function addEventListener<K extends keyof FontFaceSetEventMap>(\n  target: FontFaceSet,\n  type: K,\n  listener: (this: FontFaceSet, ev: FontFaceSetEventMap[K]) => any,\n  options?: boolean | AddEventListenerOptions,\n): UnsubscribeCallback;\n// HTMLElement / mix\nexport function addEventListener<K extends keyof HTMLElementEventMap>(\n  target:\n    | Document\n    | (Window & typeof globalThis)\n    | HTMLElement\n    | undefined\n    | null\n    | false,\n  type: K,\n  listener: (this: HTMLDivElement, ev: HTMLElementEventMap[K]) => any,\n  options?: boolean | AddEventListenerOptions,\n): UnsubscribeCallback;\n// implem\nexport function addEventListener(\n  /**\n   * allows for falsy values so you don't have to type check when adding\n   * event listeners to optional elements\n   */\n  target:\n    | Document\n    | (Window & typeof globalThis)\n    | FontFaceSet\n    | HTMLElement\n    | undefined\n    | null\n    | false,\n  type: keyof WindowEventMap | keyof DocumentEventMap | string,\n  listener: (ev: Event) => any,\n  options?: boolean | AddEventListenerOptions,\n): UnsubscribeCallback {\n  if (!target) {\n    return () => {};\n  }\n  target?.addEventListener?.(type, listener, options);\n  return () => {\n    target?.removeEventListener?.(type, listener, options);\n  };\n}\n\nexport function getSvgPathFromStroke(points: number[][], closed = true) {\n  const len = points.length;\n\n  if (len < 4) {\n    return ``;\n  }\n\n  let a = points[0];\n  let b = points[1];\n  const c = points[2];\n\n  let result = `M${a[0].toFixed(2)},${a[1].toFixed(2)} Q${b[0].toFixed(\n    2,\n  )},${b[1].toFixed(2)} ${average(b[0], c[0]).toFixed(2)},${average(\n    b[1],\n    c[1],\n  ).toFixed(2)} T`;\n\n  for (let i = 2, max = len - 1; i < max; i++) {\n    a = points[i];\n    b = points[i + 1];\n    result += `${average(a[0], b[0]).toFixed(2)},${average(a[1], b[1]).toFixed(\n      2,\n    )} `;\n  }\n\n  if (closed) {\n    result += \"Z\";\n  }\n\n  return result;\n}\n\nexport const normalizeEOL = (str: string) => {\n  return str.replace(/\\r?\\n|\\r/g, \"\\n\");\n};\n\n// -----------------------------------------------------------------------------\ntype HasBrand<T> = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  [K in keyof T]: K extends `~brand${infer _}` ? true : never;\n}[keyof T];\n\ntype RemoveAllBrands<T> = HasBrand<T> extends true\n  ? {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      [K in keyof T as K extends `~brand~${infer _}` ? never : K]: T[K];\n    }\n  : never;\n\n// adapted from https://github.com/colinhacks/zod/discussions/1994#discussioncomment-6068940\n// currently does not cover all types (e.g. tuples, promises...)\ntype Unbrand<T> = T extends Map<infer E, infer F>\n  ? Map<E, F>\n  : T extends Set<infer E>\n  ? Set<E>\n  : T extends Array<infer E>\n  ? Array<E>\n  : RemoveAllBrands<T>;\n\n/**\n * Makes type into a branded type, ensuring that value is assignable to\n * the base ubranded type. Optionally you can explicitly supply current value\n * type to combine both (useful for composite branded types. Make sure you\n * compose branded types which are not composite themselves.)\n */\nexport const toBrandedType = <BrandedType, CurrentType = BrandedType>(\n  value: Unbrand<BrandedType>,\n) => {\n  return value as CurrentType & BrandedType;\n};\n\n// -----------------------------------------------------------------------------\n\n// Promise.try, adapted from https://github.com/sindresorhus/p-try\nexport const promiseTry = async <TValue, TArgs extends unknown[]>(\n  fn: (...args: TArgs) => PromiseLike<TValue> | TValue,\n  ...args: TArgs\n): Promise<TValue> => {\n  return new Promise((resolve) => {\n    resolve(fn(...args));\n  });\n};\n\nexport const isAnyTrue = (...args: boolean[]): boolean =>\n  Math.max(...args.map((arg) => (arg ? 1 : 0))) > 0;\n\nexport const safelyParseJSON = (json: string): Record<string, any> | null => {\n  try {\n    return JSON.parse(json);\n  } catch {\n    return null;\n  }\n};\n\n/**\n * use when you need to render unsafe string as HTML attribute, but MAKE SURE\n * the attribute is double-quoted when constructing the HTML string\n */\nexport const escapeDoubleQuotes = (str: string) => {\n  return str.replace(/\"/g, \"&quot;\");\n};\n\nexport const castArray = <T>(value: T | T[]): T[] =>\n  Array.isArray(value) ? value : [value];\n", "import { sanitizeUrl } from \"@braintree/sanitize-url\";\n\nimport { escapeDoubleQuotes } from \"./utils\";\n\nexport const normalizeLink = (link: string) => {\n  link = link.trim();\n  if (!link) {\n    return link;\n  }\n  return sanitizeUrl(escapeDoubleQuotes(link));\n};\n\nexport const isLocalLink = (link: string | null) => {\n  return !!(link?.includes(location.origin) || link?.startsWith(\"/\"));\n};\n\n/**\n * Returns URL sanitized and safe for usage in places such as\n * iframe's src attribute or <a> href attributes.\n */\nexport const toValidURL = (link: string) => {\n  link = normalizeLink(link);\n\n  // make relative links into fully-qualified urls\n  if (link.startsWith(\"/\")) {\n    return `${location.origin}${link}`;\n  }\n\n  try {\n    new URL(link);\n  } catch {\n    // if link does not parse as URL, assume invalid and return blank page\n    return \"about:blank\";\n  }\n\n  return link;\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,uCAAC,KAAM,KAAI;AAAA;AAAA;;;ACAX;AAAA;AAAA;AAAA,KAAC,SAAU,MAAM,SAAS;AAExB,UAAI,OAAO,WAAW,cAAc,OAAO,KAAK;AAC9C,eAAO,CAAC,GAAG,OAAO;AAAA,MACpB,WAAW,OAAO,YAAY,UAAU;AACtC,eAAO,UAAU,QAAQ;AAAA,MAC3B,OAAO;AACL,aAAK,cAAc,QAAQ;AAE3B,aAAK,cAAc,KAAK;AAAA,MAC1B;AAAA,IACF,GAAG,SAAM,WAAY;AACnB;AAEA,UAAI,cAAc,WAAY;AAC5B,aAAK,aAAa,CAAC;AAAA,MACrB;AAEA,kBAAY,UAAU,mBAAmB,SAAU,MAAM,UAAU;AACjE,aAAK,WAAW,IAAI,IAAI,KAAK,WAAW,IAAI,KAAK,CAAC;AAClD,YAAI,KAAK,WAAW,IAAI,EAAE,QAAQ,QAAQ,IAAI,GAAG;AAC/C,eAAK,WAAW,IAAI,EAAE,KAAK,QAAQ;AAAA,QACrC;AAAA,MACF;AAEA,kBAAY,UAAU,sBAAsB,SAAU,MAAM,UAAU;AACpE,YAAI,KAAK,WAAW,IAAI,GAAG;AACzB,cAAI,IAAI,KAAK,WAAW,IAAI,EAAE,QAAQ,QAAQ;AAC9C,cAAI,KAAK,GAAG;AACV,iBAAK,WAAW,IAAI,EAAE,OAAO,GAAG,CAAC;AAAA,UACnC;AAAA,QACF;AAAA,MACF;AAEA,kBAAY,UAAU,gBAAgB,SAAU,KAAK;AACnD,YAAI,KAAK,WAAW,IAAI,IAAI,KAAK,KAAK,WAAW,IAAI,IAAI,EAAE,QAAQ;AACjE,cAAI,YAAY,KAAK,WAAW,IAAI,IAAI,EAAE,MAAM;AAChD,mBAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,IAAI,GAAG,EAAE,GAAG;AAChD,sBAAU,CAAC,EAAE,KAAK,MAAM,GAAG;AAAA,UAC7B;AAAA,QACF;AAAA,MACF;AAEA,UAAI,cAAc,SAAU,MAAM;AAChC,eAAQ,OAAO,KAAK,gBAAgB,cAClC,KAAK,YAAY,SAAS;AAAA,MAC9B;AAEA,UAAI,qBAAqB,SAAU,MAAM;AACvC,eAAO;AAAA,UACL,MAAM,WAAY;AAChB,gBAAI,UAAU,KAAK;AACnB,mBAAO,UAAU,EAAC,OAAO,QAAO,IAAI,EAAC,MAAM,KAAI;AAAA,UACjD;AAAA,QACF;AAAA,MACF;AAEA,UAAI,oBAAoB,SAAU,SAAS;AACzC,YAAI,SAAS;AACb,eAAO;AAAA,UACL,MAAM,WAAY;AAChB,gBAAI,QAAQ;AACV,qBAAO,EAAC,MAAM,KAAI;AAAA,YACpB;AACA,qBAAS;AACT,mBAAO,EAAC,OAAO,QAAO;AAAA,UACxB;AAAA,QACF;AAAA,MACF;AAEA,UAAI,aAAa,SAAU,KAAKA,UAAS;AACvC,YAAI,OAAO,OAAO;AAClB,YAAI,SAAS,UAAU;AACrB,cAAI,OAAO,IAAI,SAAS,YAAY;AAClC,mBAAO;AAAA,UACT;AAEA,cAAI,OAAO,IAAI,SAAS,YAAY;AAClC,mBAAO,kBAAkB,GAAG;AAAA,UAC9B;AAAA,QACF;AACA,YAAI,SAAS,YAAY;AACvB,iBAAO,YAAY,GAAG,IAAI,IAAI,IAAI,mBAAmB,GAAG;AAAA,QAC1D;AACA,eAAO,kBAAkBA,SAAQ,QAAQ,GAAG,CAAC;AAAA,MAC/C;AAEA,UAAI,mBAAmB,SAAU,QAAQ,MAAM,MAAM;AACnD,aAAK,SAAS;AACd,aAAK,OAAO;AACZ,aAAK,OAAO;AAAA,MACd;AAEA,UAAIC,eAAc,SAAU,QAAQ,aAAa,SAAS;AACxD,oBAAY,KAAK,IAAI;AACrB,YAAI,OAAO,gBAAgB,YACvB,KAAK,MAAM,WAAW,MAAM,eAC5B,cAAc,GAAG;AACnB,gBAAM,IAAI,MAAM,qBAAqB;AAAA,QACvC;AACA,aAAK,eAAe;AACpB,aAAK,WAAW,WAAW,CAAC;AAC5B,aAAK,SAAS,UAAU,KAAK,SAAS,WAAW;AACjD,aAAK,YAAY,WAAW,QAAQ,KAAK,SAAS,OAAO;AACzD,aAAK,QAAQ;AACb,aAAK,QAAQ;AACb,aAAK,WAAW;AAChB,aAAK,aAAa;AAAA,MACpB;AACA,MAAAA,aAAY,YAAY,IAAI,YAAY;AACxC,MAAAA,aAAY,UAAU,cAAcA;AAEpC,MAAAA,aAAY,UAAU,cAAc,SAAU,OAAO;AACnD,YAAI,OAAO,UAAU,aAAa;AAChC,eAAK,eAAe;AACpB,cAAI,KAAK,OAAO,GAAG;AACjB,iBAAK,SAAS;AAAA,UAChB;AAAA,QACF;AACA,eAAO,KAAK;AAAA,MACd;AAEA,MAAAA,aAAY,UAAU,OAAO,WAAY;AACvC,eAAO,KAAK;AAAA,MACd;AAEA,MAAAA,aAAY,UAAU,SAAS,WAAY;AACzC,eAAO,CAAC,CAAC,KAAK;AAAA,MAChB;AAEA,MAAAA,aAAY,UAAU,UAAU,WAAY;AAC1C,eAAO,KAAK;AAAA,MACd;AAEA,MAAAA,aAAY,UAAU,QAAQ,WAAY;AACxC,YAAI,OAAO;AACX,YAAID,WAAU,KAAK,SAAS;AAC5B,aAAK,WAAW,IAAIA,SAAQ,SAAU,SAAS,QAAQ;AACrD,eAAK,aAAa;AAAA,YAChB;AAAA,YACA;AAAA,UACF;AACA,eAAK,SAAS;AAAA,QAChB,CAAC;AACD,eAAO,KAAK;AAAA,MACd;AAEA,MAAAC,aAAY,UAAU,aAAa,SAAU,MAAM,MAAM;AACvD,aAAK,cAAc,IAAI,iBAAiB,MAAM,MAAM,IAAI,CAAC;AAAA,MAC3D;AAEA,MAAAA,aAAY,UAAU,UAAU,SAAU,OAAO;AAC/C,YAAI,OAAO;AACT,eAAK,WAAW,OAAO,KAAK;AAAA,QAC9B,OAAO;AACL,eAAK,WAAW,QAAQ;AAAA,QAC1B;AACA,aAAK,WAAW;AAChB,aAAK,aAAa;AAAA,MACpB;AAEA,MAAAA,aAAY,UAAU,4BAA4B,SAAU,SAAS,QAAQ;AAC3E,aAAK;AACL,YAAI,KAAK,OAAO,GAAG;AACjB,eAAK,WAAW,aAAa;AAAA,YAC3B;AAAA,YACA;AAAA,UACF,CAAC;AACD,eAAK,SAAS;AAAA,QAChB;AAAA,MACF;AAEA,MAAAA,aAAY,UAAU,2BAA2B,SAAU,SAAS,OAAO;AACzE,aAAK;AACL,YAAI,KAAK,OAAO,GAAG;AACjB,eAAK,WAAW,YAAY;AAAA,YAC1B;AAAA,YACA;AAAA,UACF,CAAC;AACD,eAAK,QAAQ,SAAS,IAAI,MAAM,eAAe,CAAC;AAAA,QAClD;AAAA,MACF;AAEA,MAAAA,aAAY,UAAU,gBAAgB,SAAU,SAAS;AACvD,YAAI,OAAO;AACX,gBACG,KAAK,SAAU,QAAQ;AACtB,eAAK,0BAA0B,SAAS,MAAM;AAAA,QAChD,GAAG,SAAU,OAAO;AAClB,eAAK,yBAAyB,SAAS,KAAK;AAAA,QAC9C,CAAC,EAAE,OAAO,EAAE,SAAU,KAAK;AACzB,eAAK,QAAQ,IAAI,MAAM,gCAAgC,GAAG,CAAC;AAAA,QAC7D,CAAC;AAAA,MACL;AAEA,MAAAA,aAAY,UAAU,WAAW,WAAY;AAC3C,YAAI,CAAC,KAAK,OAAO;AACf,cAAI,SAAS,EAAE,MAAM,MAAM;AAC3B,iBAAO,KAAK,QAAQ,KAAK,gBACrB,EAAE,SAAS,KAAK,UAAU,KAAK,GAAG,MAAM;AAC1C,iBAAK;AACL,iBAAK,cAAc,OAAO,KAAK;AAAA,UACjC;AACA,eAAK,QAAS,WAAW,QAAQ,CAAC,CAAC,OAAO;AAAA,QAC5C;AACA,YAAI,KAAK,SAAS,KAAK,UAAU,GAAG;AAClC,eAAK,QAAQ;AAAA,QACf;AAAA,MACF;AAEA,MAAAA,aAAY,mBAAmB;AAE/B,MAAAA,aAAY,cAAcA;AAE1B,aAAOA;AAAA,IACT,CAAC;AAAA;AAAA;;;ACvND;AAAA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,cAAc;AACtB,QAAI,uBAAuB;AAC3B,QAAI,oBAAoB;AACxB,QAAI,sBAAsB;AAC1B,QAAI,sBAAsB;AAC1B,QAAI,iBAAiB;AACrB,QAAI,0BAA0B,CAAC,KAAK,GAAG;AACvC,aAAS,6BAA6B,KAAK;AACvC,aAAO,wBAAwB,QAAQ,IAAI,CAAC,CAAC,IAAI;AAAA,IACrD;AAEA,aAAS,qBAAqB,KAAK;AAC/B,aAAO,IAAI,QAAQ,mBAAmB,SAAU,OAAO,KAAK;AACxD,eAAO,OAAO,aAAa,GAAG;AAAA,MAClC,CAAC;AAAA,IACL;AACA,aAASC,aAAY,KAAK;AACtB,UAAI,eAAe,qBAAqB,OAAO,EAAE,EAC5C,QAAQ,qBAAqB,EAAE,EAC/B,QAAQ,qBAAqB,EAAE,EAC/B,KAAK;AACV,UAAI,CAAC,cAAc;AACf,eAAO;AAAA,MACX;AACA,UAAI,6BAA6B,YAAY,GAAG;AAC5C,eAAO;AAAA,MACX;AACA,UAAI,wBAAwB,aAAa,MAAM,cAAc;AAC7D,UAAI,CAAC,uBAAuB;AACxB,eAAO;AAAA,MACX;AACA,UAAI,YAAY,sBAAsB,CAAC;AACvC,UAAI,qBAAqB,KAAK,SAAS,GAAG;AACtC,eAAO;AAAA,MACX;AACA,aAAO;AAAA,IACX;AACA,YAAQ,cAAcA;AAAA;AAAA;;;ACvCtB;;;ACAA;AAAO,IAAM,aAAN,MAAoB;AAAA,EAGzB,YAAoB,eAAoC;AAApC;AAAA,EAAqC;AAAA,EAFjD,UAAe,CAAC;AAAA,EAIxB,SAAS,KAAa;AACpB,UAAM,OAAO,KAAK,QAAQ,GAAG;AAC7B,WAAO,MAAM,GAAG;AACd,YAAM,WAAY,MAAM,KAAM,KAAK;AACnC,YAAM,SAAS,KAAK,QAAQ,OAAO;AACnC,UAAI,KAAK,cAAc,IAAI,IAAI,KAAK,cAAc,MAAM,GAAG;AACzD,aAAK,QAAQ,OAAO,IAAI;AACxB,aAAK,QAAQ,GAAG,IAAI;AACpB,cAAM;AAAA,MACR,OAAO;AACL;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EAEA,SAAS,KAAa;AACpB,UAAM,SAAS,KAAK,QAAQ;AAC5B,UAAM,OAAO,KAAK,QAAQ,GAAG;AAC7B,UAAM,QAAQ,KAAK,cAAc,IAAI;AAErC,WAAO,MAAM;AACX,YAAM,UAAW,MAAM,KAAM;AAC7B,YAAM,UAAU,UAAU;AAC1B,UAAI,OAAO;AACX,UAAI,cAAc;AAElB,UAAI,UAAU,QAAQ;AACpB,cAAM,SAAS,KAAK,QAAQ,OAAO;AACnC,sBAAc,KAAK,cAAc,MAAM;AACvC,YAAI,cAAc,OAAO;AACvB,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,UAAI,UAAU,QAAQ;AACpB,cAAM,SAAS,KAAK,QAAQ,OAAO;AACnC,cAAM,cAAc,KAAK,cAAc,MAAM;AAC7C,YAAI,eAAe,SAAS,OAAO,QAAQ,cAAc;AACvD,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,UAAI,SAAS,MAAM;AACjB,aAAK,QAAQ,GAAG,IAAI,KAAK,QAAQ,IAAI;AACrC,aAAK,QAAQ,IAAI,IAAI;AACrB,cAAM;AAAA,MACR,OAAO;AACL;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EAEA,KAAK,MAAS;AACZ,SAAK,QAAQ,KAAK,IAAI;AACtB,SAAK,SAAS,KAAK,QAAQ,SAAS,CAAC;AAAA,EACvC;AAAA,EAEA,MAAgB;AACd,QAAI,KAAK,QAAQ,WAAW,GAAG;AAC7B,aAAO;AAAA,IACT;AAEA,UAAM,SAAS,KAAK,QAAQ,CAAC;AAC7B,UAAM,MAAM,KAAK,QAAQ,IAAI;AAE7B,QAAI,KAAK,QAAQ,SAAS,GAAG;AAC3B,WAAK,QAAQ,CAAC,IAAI;AAClB,WAAK,SAAS,CAAC;AAAA,IACjB;AAEA,WAAO;AAAA,EACT;AAAA,EAEA,OAAO,MAAS;AACd,QAAI,KAAK,QAAQ,WAAW,GAAG;AAC7B;AAAA,IACF;AAEA,UAAM,IAAI,KAAK,QAAQ,QAAQ,IAAI;AACnC,UAAM,MAAM,KAAK,QAAQ,IAAI;AAE7B,QAAI,IAAI,KAAK,QAAQ,QAAQ;AAC3B,WAAK,QAAQ,CAAC,IAAI;AAElB,UAAI,KAAK,cAAc,GAAG,IAAI,KAAK,cAAc,IAAI,GAAG;AACtD,aAAK,SAAS,CAAC;AAAA,MACjB,OAAO;AACL,aAAK,SAAS,CAAC;AAAA,MACjB;AAAA,IACF;AAAA,EACF;AAAA,EAEA,OAAe;AACb,WAAO,KAAK,QAAQ;AAAA,EACtB;AAAA,EAEA,eAAe,MAAS;AACtB,SAAK,SAAS,KAAK,QAAQ,QAAQ,IAAI,CAAC;AAAA,EAC1C;AACF;;;ACxGA;;;ACAA;AAAA,EACE,OAAS;AAAA,EACT,OAAS;AAAA,EACT,MAAQ;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA,KAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA,MAAQ;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA,OAAS;AAAA,IACP;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA,QAAU;AAAA,IACR;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA,QAAU;AAAA,IACR;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA,MAAQ;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA,MAAQ;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA,MAAQ;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA,OAAS;AAAA,IACP;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA,MAAQ;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA,QAAU;AAAA,IACR;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA,QAAU;AAAA,IAC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",
  "names": ["Promise", "PromisePool", "sanitizeUrl", "EVENT", "UserIdleState", "Pool", "newValues"]
}
